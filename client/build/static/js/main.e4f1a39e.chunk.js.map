{"version":3,"sources":["reducers.js","CustomRoute.js","InputComponents/Validation.js","Login.js","Signup.js","ResetPassword.js","UpdatePassword.js","Paginator.js","Schedule.js","EditEventType.js","CreateEventType.js","NotFound.js","Scheduler.js","SchedulerPanel.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isUserLogged","loggedUser","name","email","eventTypes","getEventTypes","createSelector","state","reducer","action","console","log","type","users","last","length","lastElement","lastId","userId","payload","contact","username","password","connect","rest","to","minLengthValidator","value","minLength","requiredValidator","trim","emailValidator","test","String","toLowerCase","validate","rules","isValid","rule","Login","props","changeHandler","e","target","form","updatedControls","formControls","updatedFormElement","inputIdentifier","touched","valid","validationRules","setState","onSubmit","event","preventDefault","axios","post","then","res","status","setLoggedUser","data","history","push","catch","err","response","errMsg","placeholder","isRequired","isEmail","this","className","Card","body","Form","FormGroup","Label","for","Input","id","onChange","FormFeedback","invalid","Button","disabled","dangerouslySetInnerHTML","__html","Component","dispatch","user","Signup","successMsg","confirmPassword","handleChange","confirm","register","style","color","marginTop","display","textAlign","ResetPassword","submitted","completed","sendPasswordResetEmail","top","position","width","UpdatePassword","updatePassword","token","Paginator","handleClick","offsetEnd","perPage","offsetStart","slice","displayData","currPage","offset","next","pageCount","previous","Math","ceil","buttons","i","key","onClick","map","evt","index","padding","CardTitle","date_mod","Table","time_slot_start_mod","time_slot_end_mod","first_name","last_name","title","ButtonGroup","a","PureComponent","marginLeft","navLink","textDecoration","marginRight","cardFooter","backgroundColor","tabContent","overflow","Schedule","cust","customAppointmentLink","setActiveTab","activeTab","setSubActiveTab","subActiveTab","getEventTypesFromAPI","get","loadEventTypes","getUpcomingPastDataFromAPI","upcoming_events","upcoming","past_events","past","event_types","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","Row","Col","sm","pathname","outline","CardDeck","CardText","duration","CardFooter","logout","events","EditEventType","changeHandle","setDuration","save","put","goBack","location","duration_range","margin","paddingLeft","border","marginBottom","borderColor","borderWidth","height","alignSelf","includes","justifyContent","CreateEventType","required","Scheduler","Container","et","icon","faCircle","faCaretRight","current_date","Date","SchedularPanel","fetchAvailableSlots","date","toISOString","availableTimeSlots","disableDate","disableDates","toLocaleDateString","getDay","onChangeDate","selectDate","onClickHandler","slot","selectedSlotStart","selectedSlotEnd","moment","add","format","scheduleAgain","firstName","lastName","scheduleEvent","bookSlots","timeSlot","periodsInADay","as","startTimeMoment","stopTimeMoment","timeSlotDisplay","toDateString","xs","fontSize","md","tileDisabled","App","isOpen","toggle","replace","Navbar","dark","expand","flexDirection","alignItems","Collapse","navbar","NavbarText","UncontrolledDropdown","DropdownToggle","nav","borderRadius","lineHeight","charAt","fontWeight","DropdownMenu","right","DropdownItem","logOut","exact","path","component","render","SchedulerPanel","match","params","Notfound","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","init","persistedState","localStorage","getItem","JSON","parse","store","createStore","rootReducer","subscribe","setItem","stringify","getState","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e4f1a39e.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nexport const SIGNUP = \"SIGNUP\";\nexport const LOGIN = \"LOGIN\";\n//export const UPDATE = \"UPDATE\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOAD_EVENT_TYPES = \"LOAD_EVENT_TYPES\";\n\nexport const initialState = {\n  isUserLogged: false,\n  loggedUser: {\n    name: \"\",\n    email: \"\",\n  },\n  eventTypes: [],\n};\n\nexport const getEventTypes = createSelector(\n  (state) => state.eventTypes,\n  (eventTypes) => eventTypes\n);\n\nconst reducer = (state = initialState, action) => {\n  console.log(action.type);\n  switch (action.type) {\n    case \"SIGNUP\":\n      let { users } = state;\n      let last = users.length;\n\n      let lastElement = users[last - 1];\n\n      let lastId = lastElement.userId;\n\n      //console.log(lastId);\n\n      return {\n        loggedUser: 0,\n        users: [\n          ...state.users,\n          {\n            userId: lastId + 1,\n            name: action.payload.name,\n            contact: action.payload.contact,\n            email: action.payload.email,\n            username: action.payload.username,\n            password: action.payload.password,\n          },\n        ],\n      };\n\n    case \"LOGIN\":\n      console.log(\"Login initiated\");\n      return {\n        isUserLogged: true,\n        loggedUser: action.payload,\n      };\n\n    case \"LOGOUT\":\n      console.log(\"Hey\");\n      return {\n        isUserLogged: false,\n        loggedUser: { name: \"\", email: \"\" },\n      };\n\n    case \"LOAD_EVENT_TYPES\":\n      console.log(\"Load events initiated: \", action.payload);\n      return {\n        ...state,\n        eventTypes: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return { isUserLogged: state.isUserLogged };\n};\n\nconst CustomRoute = ({ isUserLogged, ...rest }) => {\n  if (isUserLogged) {\n    console.log(rest);\n    return <Route {...rest} />;\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default connect(mapStateToProps)(CustomRoute);\n","const validate = (value, rules) => {\n  let isValid = true;\n\n  for (let rule in rules) {\n    switch (rule) {\n      case \"minLength\":\n        isValid = isValid && minLengthValidator(value, rules[rule]);\n        break;\n\n      case \"isRequired\":\n        isValid = isValid && requiredValidator(value);\n        break;\n\n      case \"isEmail\":\n        isValid = isValid && emailValidator(value);\n        break;\n\n      default:\n        isValid = true;\n    }\n  }\n\n  return isValid;\n};\n\n/**\n * minLength Val\n * @param  value\n * @param  minLength\n * @return\n */\nconst minLengthValidator = (value, minLength) => {\n  return value.length >= minLength;\n};\n\n/**\n * Check to confirm that feild is required\n *\n * @param  value\n * @return\n */\nconst requiredValidator = (value) => {\n  return value.trim() !== \"\";\n};\n\n/**\n * Email validation\n *\n * @param value\n * @return\n */\nconst emailValidator = (value) => {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(value).toLowerCase());\n};\n\nexport default validate;\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {\n  Card,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport axios from \"axios\";\n//import history from \"./history\";\nimport { connect } from \"react-redux\";\nimport { LOGIN } from \"./reducers\";\n\nimport validate from \"./InputComponents/Validation\";\n\nconst mapStateToProps = (state) => {\n  let { loggedUser, isUserLogged } = state;\n\n  return { loggedUser, isUserLogged };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setLoggedUser: (user) => {\n      // console.log(\"Set Login flag called\");\n      dispatch({ type: LOGIN, payload: user });\n    },\n  };\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {\n        valid: false,\n        touched: 0,\n        errMsg: \"Provided credentials are not correct. Please try again!!!\",\n      },\n      formControls: {\n        email: {\n          value: \"\",\n          placeholder: \"Please enter your email id\",\n          valid: false,\n          touched: 0,\n          validationRules: {\n            isRequired: true,\n            isEmail: true,\n          },\n          errMsg: \"Please enter correct email id\",\n        },\n        password: {\n          value: \"\",\n          placeholder: \"Please enter your password\",\n          valid: false,\n          touched: 0,\n          validationRules: {\n            isRequired: true,\n          },\n          errMsg: \"Please re-enter your password\",\n        },\n      },\n    };\n  }\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    let { form } = this.state;\n\n    const updatedControls = {\n      ...this.state.formControls,\n    };\n\n    const updatedFormElement = {\n      ...updatedControls[name],\n    };\n\n    updatedFormElement.value = value;\n    updatedFormElement.touched = 1;\n    updatedFormElement.valid = validate(\n      value,\n      updatedFormElement.validationRules\n    );\n\n    updatedControls[name] = updatedFormElement;\n\n    form.valid = true;\n    form.touched = 1;\n\n    for (let inputIdentifier in updatedControls) {\n      form.valid = updatedControls[inputIdentifier].valid && form.valid;\n      if (form.valid === false) {\n        form.touched = 0;\n      }\n    }\n\n    this.setState({\n      formControls: updatedControls,\n      form,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    console.log(\"Submit Clicked!!!\");\n\n    const { formControls, form } = this.state;\n    let email = formControls.email;\n    let password = formControls.password;\n    axios\n      .post(\"/auth/login\", { email: email.value, password: password.value })\n      .then((res) => {\n        if (res.status === 200) {\n          //console.log(res);\n\n          this.props.setLoggedUser({\n            email: email.value,\n            name: res.data.name,\n          });\n          this.props.history.push(\"/schedule\");\n        }\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          email.value = \"\";\n          email.valid = false;\n        }\n        password.value = \"\";\n        password.valid = false;\n        form.valid = false;\n        form.errMsg = `<p><span>Error Code:</span> ${err.response.status} </br> <span>Message:</span> ${err.response.data}</p>`;\n        this.setState({ form, email, password });\n        console.log(this.state.form);\n      });\n\n    //console.log(isError.form);\n  };\n\n  render() {\n    const { form } = this.state;\n    let { email, password } = this.state.formControls;\n\n    console.log(this.props.loggedUser);\n\n    return (\n      <>\n        {this.props.isUserLogged ? (\n          <Redirect to=\"/schedule\" />\n        ) : (\n          <div className=\"wrapper\">\n            <div className=\"login-container\">\n              <Card body className=\"login\">\n                <Form onSubmit={this.onSubmit}>\n                  <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      placeholder={email.placeholder}\n                      value={email.value}\n                      touched={email.touched}\n                      valid={email.valid}\n                      onChange={this.changeHandler}\n                    />\n                    <FormFeedback\n                      invalid=\"{formControls.email.touched===1 && \n                      formControls.email.valid===false}\"\n                    >\n                      {email.errMsg}\n                    </FormFeedback>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"password\">Password</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      placeholder={password.placeholder}\n                      value={password.value}\n                      touched={password.touched}\n                      valid={password.valid}\n                      onChange={this.changeHandler}\n                    />\n                    <FormFeedback\n                      invalid=\"{formControls.password.touched===1 && \n                      formControls.password.valid===false}\"\n                    >\n                      {password.errMsg}\n                    </FormFeedback>\n                  </FormGroup>\n\n                  <Button\n                    className=\"submit-button\"\n                    type=\"submit\"\n                    disabled={!form.valid}\n                  >\n                    Submit\n                  </Button>\n\n                  <Link className=\"link\" to=\"/resetpassword\">\n                    Forgot Password\n                  </Link>\n                  <br />\n                  <br />\n                  <Link to=\"/signup\" className=\"link\">\n                    Don't have Account, click here !!!\n                  </Link>\n                </Form>\n\n                <p\n                  className={\n                    form.touched === 1 && form.valid === false\n                      ? \"form-error\"\n                      : \"\"\n                  }\n                  dangerouslySetInnerHTML={{\n                    __html:\n                      form.touched === 1 && form.valid === false\n                        ? form.errMsg\n                        : \"\",\n                  }}\n                />\n              </Card>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Button,\n  FormFeedback,\n  Card,\n} from \"reactstrap\";\nimport validate from \"./InputComponents/Validation\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  state = {\n    form: {\n      valid: false,\n      touched: 0,\n      successMsg: \"You have been registered successfully\",\n      errMsg:\n        \"It seems there was some issue while creating account, kindly try once again!!!\",\n    },\n    formControls: {\n      name: {\n        value: \"\",\n        placeholder: \"Please enter your full-name\",\n        valid: false,\n        touched: 0,\n        validationRules: {\n          isRequired: true,\n        },\n        errMsg: \"Your full-name is required\",\n        successMsg: \"Entered name is valid\",\n      },\n      email: {\n        value: \"\",\n        placeholder: \"Please enter your email id\",\n        valid: false,\n        touched: 0,\n        validationRules: {\n          isRequired: true,\n          isEmail: true,\n        },\n        errMsg: \"Please enter correct email id\",\n        successMsg: \"Entered email id is valid\",\n      },\n      password: {\n        value: \"\",\n        placeholder: \"Please enter the password\",\n        valid: false,\n        touched: 0,\n        validationRules: {\n          isRequired: true,\n          minLength: 10,\n        },\n        errMsg: \"Password must be at least 10 characters long\",\n        successMsg: \"Entered password is valid\",\n      },\n      confirmPassword: {\n        value: \"\",\n        placeholder: \"Please re-enter the password\",\n        valid: false,\n        touched: 0,\n        validationRules: {\n          isRequired: true,\n          minLength: 10,\n        },\n        errMsg:\n          \"Entered password must match with previous one. Kindly enter same password as above.\",\n        successMsg: \"Re-entered password matched\",\n      },\n    },\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    let { form, formControls } = this.state;\n\n    const updatedControls = {\n      ...this.state.formControls,\n    };\n\n    const updatedFormElement = {\n      ...updatedControls[name],\n    };\n\n    updatedFormElement.value = value;\n    updatedFormElement.touched = 1;\n    updatedFormElement.valid = validate(\n      value,\n      updatedFormElement.validationRules\n    );\n\n    if (name === \"confirmPassword\" && updatedFormElement.valid === true) {\n      let confirm = formControls.password.value === value ? true : false;\n      updatedFormElement.valid = confirm;\n    }\n\n    updatedControls[name] = updatedFormElement;\n\n    form.valid = true;\n    form.touched = 1;\n\n    for (let inputIdentifier in updatedControls) {\n      form.valid = updatedControls[inputIdentifier].valid && form.valid;\n      if (form.valid === false) {\n        form.touched = 0;\n      }\n    }\n\n    this.setState({\n      formControls: updatedControls,\n      form,\n    });\n  };\n\n  register = (event) => {\n    event.preventDefault();\n\n    let { formControls, form } = this.state;\n    let name = formControls.name;\n    let email = formControls.email;\n    let password = formControls.password;\n    let confirmPassword = formControls.confirmPassword;\n    let user = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n\n    console.log(user);\n\n    axios\n      .post(\"api/user/register\", user)\n      .then((res) => {\n        console.log(res);\n        if (res.status === 200) {\n          name = { ...name, value: \"\", touched: 0, valid: false };\n          email = { ...email, value: \"\", touched: 0, valid: false };\n          password = { ...password, value: \"\", touched: 0, valid: false };\n          confirmPassword = {\n            ...confirmPassword,\n            value: \"\",\n            touched: 0,\n            valid: false,\n          };\n\n          form = { ...form, touched: 0 };\n\n          formControls = {\n            ...formControls,\n            name,\n            email,\n            password,\n            confirmPassword,\n          };\n\n          this.setState({\n            formControls,\n            form,\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error encountered\");\n        name = { ...name, value: \"\", touched: 0, valid: false };\n        email = { ...email, value: \"\", touched: 0, valid: false };\n        password = { ...password, value: \"\", touched: 0, valid: false };\n        confirmPassword = {\n          ...confirmPassword,\n          value: \"\",\n          touched: 0,\n          valid: false,\n        };\n        form = { ...form, valid: false, touched: 1 };\n\n        formControls = {\n          ...formControls,\n          name,\n          email,\n          password,\n          confirmPassword,\n        };\n\n        this.setState({\n          formControls,\n          form,\n        });\n        console.log(\"Data saved during error:\", this.state);\n      });\n  };\n\n  render() {\n    let { name, email, password, confirmPassword } = this.state.formControls;\n    let { form } = this.state;\n    return (\n      <div className=\"wrapper-signup\">\n        <Card body className=\"card\">\n          <p>SignUp Page</p>\n          <Form onSubmit={this.register}>\n            <FormGroup>\n              <Label for=\"name\">Name:</Label>\n              <Input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={name.value}\n                placeholder={name.placeholder}\n                touched={name.touched}\n                valid={name.valid}\n                onChange={this.handleChange}\n              />\n              <FormFeedback valid>{name.successMsg}</FormFeedback>\n              <FormFeedback\n                className={\n                  name.touched === 1 && name.valid === false ? \"d-block\" : \"\"\n                }\n              >\n                {name.errMsg}\n              </FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"email\">Email:</Label>\n              <Input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={email.value}\n                placeholder={email.placeholder}\n                touched={email.touched}\n                valid={email.valid}\n                onChange={this.handleChange}\n              />\n              <FormFeedback valid>{email.successMsg}</FormFeedback>\n              <FormFeedback\n                className={\n                  email.touched === 1 && email.valid === false ? \"d-block\" : \"\"\n                }\n              >\n                {email.errMsg}\n              </FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"password\">Password:</Label>\n              <Input\n                type=\"text\"\n                id=\"password\"\n                name=\"password\"\n                value={password.value}\n                placeholder={password.placeholder}\n                touched={password.touched}\n                valid={password.valid}\n                onChange={this.handleChange}\n              />\n              <FormFeedback valid>{password.successMsg}</FormFeedback>\n              <FormFeedback\n                className={\n                  password.touched === 1 && password.valid === false\n                    ? \"d-block\"\n                    : \"\"\n                }\n              >\n                {password.errMsg}\n              </FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"confirmPassword\">Confirm Password:</Label>\n              <Input\n                type=\"text\"\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={confirmPassword.value}\n                placeholder={confirmPassword.placeholder}\n                touched={confirmPassword.touched}\n                valid={confirmPassword.valid}\n                onChange={this.handleChange}\n              />\n              <FormFeedback valid>{confirmPassword.successMsg}</FormFeedback>\n              <FormFeedback\n                className={\n                  confirmPassword.touched === 1 &&\n                  confirmPassword.valid === false\n                    ? \"d-block\"\n                    : \"\"\n                }\n              >\n                {confirmPassword.errMsg}\n              </FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Button\n                type=\"submit\"\n                className=\"submit-button\"\n                disabled={\n                  form.valid === false ||\n                  (form.valid === false && form.touched === 0)\n                }\n              >\n                Submit\n              </Button>\n            </FormGroup>\n            {form.valid && form.touched === 0 ? (\n              <p style={{ color: \"green\", marginTop: \"1rem\" }}>\n                {\" \"}\n                {form.successMsg}\n              </p>\n            ) : (\n              \"\"\n            )}\n\n            <FormFeedback\n              className={\n                form.valid === false && form.touched === 1 ? \"d-block\" : \"\"\n              }\n            >\n              {form.errMsg}\n            </FormFeedback>\n            <Link\n              style={{\n                marginTop: \"1rem\",\n                display: \"block\",\n                textAlign: \"center\",\n              }}\n              to=\"/\"\n            >\n              Go to login page\n            </Link>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Form, Input, Button, FormGroup, FormFeedback } from \"reactstrap\";\nimport validate from \"./InputComponents/Validation\";\n\nclass ResetPassword extends Component {\n  state = {\n    email: {\n      value: \"\",\n      placeholder: \"Please enter your email id\",\n      touched: 0,\n      valid: false,\n      validationRules: {\n        isRequired: true,\n        isEmail: true,\n      },\n      errMsg: \"Kindly re-enter youy correct email id\",\n    },\n    submitted: false,\n    completed: false,\n    successMsg:\n      \"If that account is in our system, we emailed you a link to reset your password.\",\n    errMsg:\n      \"It seems, given email id is not present in the system. Kindly re-try using registered email id.\",\n  };\n\n  handleChange = (e) => {\n    let { email } = this.state;\n\n    email.value = e.target.value;\n\n    email.touched = 1;\n\n    email.valid = validate(email.value, email.validationRules);\n\n    this.setState({ email });\n  };\n\n  sendPasswordResetEmail = (e) => {\n    e.preventDefault();\n    const { email } = this.state;\n    axios\n      .post(`reset_password/user/${email.value}`)\n      .then((res) =>\n        this.setState({\n          submitted: true,\n          completed: true,\n        })\n      )\n      .catch((err) => {\n        this.setState((state) => ({\n          ...state,\n          email: { ...state.email, value: \"\", valid: false },\n          submitted: true,\n        }));\n      });\n  };\n\n  render() {\n    const { email, submitted, completed } = this.state;\n    return (\n      <div className=\"wrapper-reset-password\">\n        <div className=\"reset-password\">\n          <hr\n            style={{\n              marginTop: \"2.5rem\",\n            }}\n          />\n\n          <div>\n            {submitted && completed ? (\n              <div\n                className=\"confirmation\"\n                style={{\n                  marginTop: \"8rem\",\n                }}\n              >\n                <p>{this.state.successMsg}</p>\n                <Link to=\"/\" className=\"link\">\n                  Return to sign in\n                </Link>\n              </div>\n            ) : (\n              <div className=\"card\">\n                <Form className=\"form\" onSubmit={this.sendPasswordResetEmail}>\n                  <FormGroup>\n                    <Input\n                      type=\"email\"\n                      placeholder={email.placeholder}\n                      value={email.value}\n                      touched={email.touched}\n                      valid={email.valid}\n                      onChange={this.handleChange}\n                    />\n                    <FormFeedback\n                      className={\n                        email.touched === 1 && email.valid === false\n                          ? \"d-block\"\n                          : \"\"\n                      }\n                    >\n                      {email.errMsg}\n                    </FormFeedback>\n                  </FormGroup>\n                  <FormGroup>\n                    <Button\n                      type=\"submit\"\n                      className=\"submit-button\"\n                      disabled={!email.valid}\n                    >\n                      Submit\n                    </Button>\n                  </FormGroup>\n                  <FormFeedback\n                    className={\n                      submitted === true && completed === false ? \"d-block\" : \"\"\n                    }\n                  >\n                    {this.state.errMsg}\n                  </FormFeedback>\n                </Form>\n\n                <Link to=\"/\" className=\"link\">\n                  I remember my password\n                </Link>\n              </div>\n            )}\n          </div>\n\n          <hr\n            style={{\n              top: \"450px\",\n              position: \"absolute\",\n\n              width: \"25rem\",\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default ResetPassword;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Form,\n  Input,\n  Button,\n  Card,\n  FormFeedback,\n  FormGroup,\n  Label,\n} from \"reactstrap\";\nimport validate from \"./InputComponents/Validation\";\n\nclass UpdatePassword extends Component {\n  state = {\n    form: {\n      valid: false,\n      touched: 0,\n      submitted: false,\n      successMsg: \"Your password has been updated successfully\",\n      errMsg:\n        \"It seems there was some issue while updating password, kindly try once again!!!\",\n    },\n    formControls: {\n      password: {\n        value: \"\",\n        placeholder: \"Please enter the password\",\n        valid: false,\n        touched: 0,\n        validationRules: {\n          isRequired: true,\n          minLength: 10,\n        },\n        errMsg: \"Password must be at least 10 characters long\",\n        successMsg: \"Entered password is valid\",\n      },\n      confirmPassword: {\n        value: \"\",\n        placeholder: \"Please re-enter the password\",\n        valid: false,\n        touched: 0,\n        validationRules: {\n          isRequired: true,\n          minLength: 10,\n        },\n        errMsg:\n          \"Entered password must match with previous one. Kindly enter same password as above.\",\n        successMsg: \"Re-entered password matched\",\n      },\n    },\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    let { form, formControls } = this.state;\n\n    const updatedControls = {\n      ...this.state.formControls,\n    };\n\n    const updatedFormElement = {\n      ...updatedControls[name],\n    };\n\n    updatedFormElement.value = value;\n    updatedFormElement.touched = 1;\n    updatedFormElement.valid = validate(\n      value,\n      updatedFormElement.validationRules\n    );\n\n    if (name === \"confirmPassword\" && updatedFormElement.valid === true) {\n      let confirm = formControls.password.value === value ? true : false;\n      updatedFormElement.valid = confirm;\n    }\n\n    updatedControls[name] = updatedFormElement;\n\n    form.valid = true;\n    form.touched = 1;\n\n    for (let inputIdentifier in updatedControls) {\n      form.valid = updatedControls[inputIdentifier].valid && form.valid;\n      if (form.valid === false) {\n        form.touched = 0;\n      }\n    }\n\n    this.setState({\n      formControls: updatedControls,\n      form,\n    });\n  };\n\n  updatePassword = (e) => {\n    e.preventDefault();\n    const { email, token } = this.props;\n    const { password, confirmPassword } = this.state.formControls;\n    let { form } = this.state;\n\n    console.log(form);\n    axios\n      .post(`/reset_password/receive_new_password/${email}/${token}`, {\n        password: password.value,\n      })\n      .then((res) => {\n        console.log(\"RESPONSE FROM SERVER TO CLIENT:\", res);\n        form.touched = 0;\n        if (res.status === 202) {\n          this.setState({ form });\n        }\n      })\n      .catch((err) => {\n        console.log(\"SERVER ERROR TO CLIENT:\", err);\n        password.value = \"\";\n        password.valid = false;\n        password.touched = 0;\n        confirmPassword.value = \"\";\n        confirmPassword.valid = false;\n        confirmPassword.touched = 0;\n        form.valid = false;\n        form.errMsg = err.response.data;\n        this.setState({ form, password, confirmPassword });\n      });\n  };\n\n  render() {\n    const { form } = this.state;\n    const { password, confirmPassword } = this.state.formControls;\n\n    return (\n      <div className=\"wrapper-update-password\">\n        <h5 className=\"title\">Update Password</h5>\n\n        {form.valid === true && form.touched === 0 ? (\n          <div className=\"form-success\">\n            <p>{form.successMsg}</p>\n            <Link to=\"/\">Login</Link>\n          </div>\n        ) : (\n          <Card body className=\"card\">\n            <Form onSubmit={this.updatePassword}>\n              <FormGroup>\n                <Label for=\"password\">Password:</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={password.value}\n                  placeholder={password.placeholder}\n                  touched={password.touched}\n                  valid={password.valid}\n                  onChange={this.handleChange}\n                />\n                <FormFeedback valid>{password.successMsg}</FormFeedback>\n                <FormFeedback\n                  className={\n                    password.touched === 1 && password.valid === false\n                      ? \"d-block\"\n                      : \"\"\n                  }\n                >\n                  {password.errMsg}\n                </FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"confirmPassword\">Confirm Password:</Label>\n                <Input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  value={confirmPassword.value}\n                  placeholder={confirmPassword.placeholder}\n                  touched={confirmPassword.touched}\n                  valid={confirmPassword.valid}\n                  onChange={this.handleChange}\n                />\n                <FormFeedback valid>{confirmPassword.successMsg}</FormFeedback>\n                <FormFeedback\n                  className={\n                    confirmPassword.touched === 1 &&\n                    confirmPassword.valid === false\n                      ? \"d-block\"\n                      : \"\"\n                  }\n                >\n                  {confirmPassword.errMsg}\n                </FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Button\n                  type=\"submit\"\n                  className=\"submit-button\"\n                  disabled={\n                    form.valid === false ||\n                    (form.valid === false && form.touched === 1)\n                  }\n                >\n                  Update Password\n                </Button>\n              </FormGroup>\n              <FormFeedback\n                className={\n                  form.valid === false && form.touched === 1 ? \"d-block\" : \"\"\n                }\n              >\n                {form.errMsg}\n              </FormFeedback>\n            </Form>\n          </Card>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default UpdatePassword;\n","import React, { PureComponent } from \"react\";\nimport { Card, CardTitle, Table, Button, ButtonGroup } from \"reactstrap\";\n\nclass Paginator extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      perPage: this.props.perPage,\n      data: this.props.data,\n      pageCount: Math.ceil(this.props.data.length / this.props.perPage),\n      offset: 0,\n      currPage: 1,\n      displayData: this.props.data.slice(0, this.props.perPage),\n    };\n  }\n\n  /*\n  componentDidMount() {\n    this.setState((state) => ({\n      ...state,\n      displayData: this.state.data.slice(\n        this.state.offset,\n        this.state.currPage * this.state.perPage\n      ),\n    }));\n  }\n*/\n\n  handleClick = (e, value) => {\n    e.preventDefault();\n\n    let offsetEnd = this.state.perPage * value;\n    let offsetStart = offsetEnd - this.state.perPage;\n    let data = this.state.data.slice(offsetStart, offsetEnd);\n    console.log(offsetStart);\n    this.setState({ displayData: data, currPage: value, offset: offsetStart });\n  };\n\n  next = (e) => {\n    e.preventDefault();\n    let {\n      currPage,\n      offset,\n      data,\n      displayData,\n      perPage,\n      pageCount,\n    } = this.state;\n    console.log(\"Page Count\", pageCount);\n\n    if (currPage === pageCount) {\n      console.log(\"You have reached at the end of the list\");\n      return;\n    }\n\n    offset = offset + 2;\n    currPage = currPage + 1;\n\n    displayData = data.slice(offset, currPage * perPage);\n    this.setState({ offset, currPage, displayData }, () =>\n      console.log(this.state.currPage)\n    );\n  };\n\n  previous = (e) => {\n    e.preventDefault();\n    let { currPage, offset, data, displayData, perPage } = this.state;\n\n    if (offset === 0) return;\n    offset = offset - 2;\n    currPage = currPage - 1;\n    displayData = data.slice(offset, currPage * perPage);\n    this.setState({ offset, currPage, displayData }, () =>\n      console.log(this.state.currPage)\n    );\n  };\n\n  render() {\n    const { displayData, pageCount, currPage } = this.state;\n\n    let buttons = [];\n\n    for (let i = 1; i <= pageCount; i++) {\n      buttons.push(\n        <Button\n          key={i}\n          className={currPage === i ? \"active\" : \"\"}\n          onClick={(e) => this.handleClick(e, i)}\n        >\n          {i}\n        </Button>\n      );\n    }\n\n    if (displayData.length > 0) {\n      console.log(\"Paginator:\", displayData);\n    }\n    return (\n      <div className=\"paginator-container\">\n        <div className=\"paginator-content\">\n          {this.state.displayData.length > 0\n            ? this.state.displayData.map((evt, index) => (\n                <Card\n                  key={index}\n                  style={{\n                    padding: \"0.5rem\",\n                  }}\n                >\n                  <CardTitle>{evt.date_mod}</CardTitle>\n                  <Table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          {evt.time_slot_start_mod} -{evt.time_slot_end_mod}\n                        </td>\n                        <td>\n                          {evt.first_name} {evt.last_name}\n                          <br />\n                          Event Type: {evt.title}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </Card>\n              ))\n            : \"\"}\n        </div>\n        <div className=\"paginator\">\n          <ButtonGroup>\n            <Button onClick={this.next}>Next</Button>\n            {buttons.length > 0 && buttons.map((a) => a)}\n            <Button onClick={this.previous}>Previous</Button>\n          </ButtonGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Paginator;\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { LOGOUT, LOAD_EVENT_TYPES } from \"./reducers\";\nimport Paginator from \"./Paginator\";\nimport { getEventTypes } from \"./reducers\";\n\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n  Card,\n  CardText,\n  Button,\n  CardDeck,\n  CardFooter,\n} from \"reactstrap\";\n\nconst marginLeft = { marginLeft: \"1rem\" };\n\nconst navLink = { marginLeft: \"1rem\", textDecoration: \"none\" };\n\nconst marginRight = { marginRight: \"1rem\" };\n\nconst cardFooter = { backgroundColor: \"white\" };\n\nconst tabContent = { overflow: \"auto\" };\n\nconst mapStateToProps = (state) => {\n  let { loggedUser } = state;\n  let eventTypes = getEventTypes(state);\n  return { loggedUser, eventTypes };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => {\n      console.log(\"trigger logout\");\n      // console.log(\"Set Login flag called\");\n      dispatch({ type: LOGOUT });\n    },\n    loadEventTypes: (events) => {\n      console.log(\"trigger load events\");\n\n      dispatch({ type: LOAD_EVENT_TYPES, payload: events });\n    },\n  };\n};\n\nclass Schedule extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      event_types: [],\n      activeTab: 1,\n      subActiveTab: 3,\n      upcoming_events: [],\n      past_events: [],\n      perPage: 2,\n    };\n  }\n\n  user = this.props.loggedUser.email;\n\n  name = this.props.loggedUser.name;\n\n  cust = this.props.customAppointmentLink;\n\n  /*\n  user = \"gawasshree@gmail.com\";\n\n  name = \"Shrikant Gawas\";\n\n  cust = \"/appointments/shrikant-gawas-bookings\";\n\n  */\n\n  setActiveTab = (value) => this.setState({ activeTab: value });\n\n  setSubActiveTab = (value) => this.setState({ subActiveTab: value });\n\n  getEventTypesFromAPI = () => {\n    console.log(\"user:\", this.user);\n\n    axios\n      .get(`api/event_types/${this.user}`)\n      .then((res) => {\n        console.log(res.status);\n        if (res.status === 200 && res.data.length > 0) {\n          console.log(\"Yippie:\", res.data);\n          //    this.setState({ event_types: res.data });\n          this.props.loadEventTypes(res.data);\n        }\n        console.log(\"Respone: \", res.data);\n      })\n      .catch((err) => console.log);\n  };\n\n  getUpcomingPastDataFromAPI = () => {\n    console.log(\"Api called!!\");\n\n    axios\n      .get(`api/schedule_events/${this.user}`)\n      .then((res) => {\n        console.log(res.status);\n        if (res.status === 200) {\n          this.setState({\n            upcoming_events: res.data.upcoming,\n            past_events: res.data.past,\n          });\n\n          console.log(\"upcomingData Events:\", this.state.upcoming_events);\n        }\n      })\n      .catch((err) => console.log);\n  };\n\n  componentDidMount() {\n    this.getEventTypesFromAPI();\n    this.getUpcomingPastDataFromAPI();\n  }\n\n  componentWillUnmount() {\n    console.log(\"Schedule unmounting\");\n  }\n\n  render() {\n    //  console.log(this.props.eventTypes);\n\n    return (\n      <div className=\"schedule-wrapper\">\n        <div>\n          <span className=\"title\">My Schedule</span>\n          <div className=\"tab-container\">\n            <Nav tabs>\n              <NavItem className={this.state.activeTab === 1 ? \"active\" : \"\"}>\n                <NavLink onClick={() => this.setActiveTab(1)}>\n                  Event Types\n                </NavLink>\n              </NavItem>\n              <NavItem className={this.state.activeTab === 2 ? \"active\" : \"\"}>\n                <NavLink onClick={() => this.setActiveTab(2)}>\n                  Scheduled Events\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId={1} className=\"pane\">\n                <Row className=\"row\">\n                  <Col sm=\"12\">\n                    <div className=\"top-navigation\">\n                      {this.props.eventTypes &&\n                        this.props.eventTypes.length > 0 && (\n                          <p style={marginLeft}>\n                            My Link <br />\n                            <Link to={this.cust}>{this.cust}</Link>\n                          </p>\n                        )}\n                      <Link\n                        to={{\n                          pathname: \"/event_type/create\",\n                          user: this.user,\n                        }}\n                        style={navLink}\n                      >\n                        <Button outline color=\"primary\" style={marginRight}>\n                          + New Event Type\n                        </Button>\n                      </Link>\n                    </div>\n                    <hr />\n                    <CardDeck className=\"cards-group\">\n                      {this.props.eventTypes && this.props.eventTypes.length > 0\n                        ? this.props.eventTypes.map((event, index) => (\n                            <Card body className=\"event_cards\" key={index}>\n                              <CardText>{event.title}</CardText>\n                              <CardText>\n                                <small className=\"text-muted\">\n                                  {event.duration} mins\n                                </small>\n                              </CardText>\n                              <CardFooter style={cardFooter}>\n                                <Link\n                                  to={{\n                                    pathname: \"/event_type/edit\",\n                                    event: event,\n                                  }}\n                                >\n                                  Edit\n                                </Link>\n                              </CardFooter>\n                            </Card>\n                          ))\n                        : \"\"}\n                    </CardDeck>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane tabId={2} className=\"pane\">\n                <Row>\n                  <Col sm=\"12\">\n                    <Card body className=\"card-body\">\n                      <Nav tabs>\n                        <NavItem\n                          className={\n                            this.state.subActiveTab === 3 ? \"active\" : \"\"\n                          }\n                        >\n                          <NavLink onClick={() => this.setSubActiveTab(3)}>\n                            Upcoming\n                          </NavLink>\n                        </NavItem>\n                        <NavItem\n                          className={\n                            this.state.subActiveTab === 4 ? \"active\" : \"\"\n                          }\n                        >\n                          <NavLink onClick={() => this.setSubActiveTab(4)}>\n                            Past\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                      <TabContent\n                        activeTab={this.state.subActiveTab}\n                        style={tabContent}\n                      >\n                        <TabPane tabId={3} className=\"pane\">\n                          <Row>\n                            <Col>\n                              {this.state.upcoming_events.length > 0 ? (\n                                <Paginator\n                                  data={this.state.upcoming_events}\n                                  perPage={2}\n                                />\n                              ) : (\n                                \"\"\n                              )}\n                            </Col>\n                          </Row>\n                        </TabPane>\n                        <TabPane tabId={4} className=\"pane\">\n                          <Row>\n                            <Col>\n                              {this.state.past_events.length > 0 ? (\n                                <Paginator\n                                  data={this.state.past_events}\n                                  perPage={2}\n                                />\n                              ) : (\n                                \"\"\n                              )}\n                            </Col>\n                          </Row>\n                        </TabPane>\n                      </TabContent>\n                    </Card>\n                  </Col>\n                </Row>\n              </TabPane>\n            </TabContent>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);\n//export default Schedule;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form, FormGroup, Label, Input, Col, Card } from \"reactstrap\";\n\nimport validate from \"./InputComponents/Validation\";\n\nclass EditEventType extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.location);\n    //   this.props = { event: { title: \"Phone Call\", duration: 45 } };\n    this.state = {\n      id: this.props.location.event.id,\n      form: {\n        valid: false,\n        touched: 0,\n      },\n      formControls: {\n        title: {\n          value: this.props.location.event.title,\n          touched: 0,\n          valid: false,\n          validationRules: {\n            isRequired: true,\n          },\n        },\n        duration: {\n          value: this.props.location.event.duration,\n          touched: 0,\n          valid: false,\n          validationRules: {\n            isRequired: true,\n          },\n        },\n      },\n      errMsg: \"\",\n    };\n  }\n  changeHandle = (e) => {\n    let { value, name } = e.target;\n    let { formControls, form } = this.state;\n\n    formControls[name].value = value;\n\n    formControls[name].touched = 1;\n\n    formControls[name].valid = validate(\n      value,\n      formControls[name].validationRules\n    );\n\n    form.valid = formControls[name].valid;\n    form.touched = 1;\n\n    this.setState({ formControls, form });\n  };\n\n  setDuration = (e, value) => {\n    e.preventDefault();\n    let { formControls, form } = this.state;\n\n    formControls[\"duration\"].value = value;\n\n    formControls[\"duration\"].valid = true;\n\n    formControls[\"duration\"].touched = 1;\n\n    form.touched = 1;\n\n    form.valid = true;\n\n    this.setState({ formControls, form });\n  };\n\n  save = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n\n    let { title, duration } = this.state.formControls;\n\n    axios\n      .put(`api/event_type/edit/${this.state.id}`, {\n        title: title.value,\n        duration: duration.value,\n      })\n      .then((res) => {\n        //      console.log(res);\n        if (res.status === 200) {\n          this.props.history.goBack();\n        }\n      })\n      .catch((err) => console.log);\n  };\n\n  render() {\n    // let event = this.props.location.event;\n    // console.log(props.history);\n\n    const { form } = this.state;\n    const { title, duration } = this.state.formControls;\n\n    let duration_range = [15, 30, 45, 60];\n\n    return (\n      <div style={{ margin: \"50px 50px 50px 150px\" }}>\n        <Button\n          outline\n          color=\"primary\"\n          onClick={() => this.props.history.goBack()}\n        >\n          {\"< Back\"}\n        </Button>\n        <h4 style={{ paddingLeft: \"20rem\", display: \"inline-block\" }}>\n          Edit Event Type\n        </h4>\n        <br />\n        <br />\n\n        <hr />\n        <Card\n          body\n          style={{ marginTop: \"3rem\", border: \"0.1rem #483D8B solid\" }}\n        >\n          <Form>\n            <FormGroup style={{ marginBottom: \"2rem\" }}>\n              <Label for=\"Title\" style={{ marginBottom: \"1rem\" }}>\n                Event Name*\n              </Label>\n              <Col sm={6} style={{ paddingLeft: 0 }}>\n                <Input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  value={title.value}\n                  onChange={this.changeHandle}\n                  style={{\n                    color: \"#8a2be2\",\n                    borderColor: \"#8a2be2\",\n                    borderWidth: \"2px\",\n                  }}\n                />\n              </Col>\n            </FormGroup>\n\n            <Label style={{ marginBottom: \"2rem\" }}>Event Duration*</Label>\n\n            <div style={{ display: \"flex\" }} className=\"duration-list\">\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={duration.value === 15 ? \"selected-duration\" : \"\"}\n                onClick={(event) => this.setDuration(event, 15)}\n              >\n                15\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={duration.value === 30 ? \"selected-duration\" : \"\"}\n                onClick={(event) => this.setDuration(event, 30)}\n              >\n                30\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={duration.value === 45 ? \"selected-duration\" : \"\"}\n                onClick={(event) => this.setDuration(event, 45)}\n              >\n                45\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={duration.value === 60 ? \"selected-duration\" : \"\"}\n                onClick={(event) => this.setDuration(event, 60)}\n              >\n                60\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Card\n                style={{\n                  display: \"inline-block\",\n                  color: \"black\",\n                  width: \"6rem\",\n                  height: \"3.5rem\",\n                  alignSelf: \"baseline\",\n                  marginLeft: \"1rem\",\n                  textAlign: \"center\",\n                  borderColor: \"black\",\n                }}\n                className={\n                  !duration_range.includes(duration.value)\n                    ? \"selected-duration\"\n                    : \"\"\n                }\n              >\n                <Input\n                  type=\"number\"\n                  id=\"duration\"\n                  name=\"duration\"\n                  value={\n                    !duration_range.includes(duration.value)\n                      ? duration.value\n                      : \"-\"\n                  }\n                  onChange={this.changeHandle}\n                  style={{ width: \"4rem\", height: \"2rem\" }}\n                />\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  custom min\n                </small>\n              </Card>\n            </div>\n            <br />\n\n            <hr />\n            <FormGroup\n              style={{\n                marginTop: \"2rem\",\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                outline\n                style={{ marginRight: \"20px\" }}\n                onClick={() => this.props.history.goBack()}\n              >\n                Cancel\n              </Button>\n\n              <Button\n                color=\"primary\"\n                onClick={this.save}\n                disabled={form.valid === false}\n              >\n                Save\n              </Button>\n            </FormGroup>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default EditEventType;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Col,\n  Card,\n  FormFeedback,\n} from \"reactstrap\";\n\nclass CreateEventType extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.location);\n    //   this.props = { event: { title: \"Phone Call\", duration: 45 } };\n    this.state = {\n      title: {\n        placeholder: \"Please enter the event name\",\n        value: \"\",\n        touched: 0,\n      },\n      duration: 0,\n      user: this.props.location.user,\n      errMsg: \"\",\n    };\n  }\n\n  changeHandle = (e) => {\n    let { value } = e.target;\n    let { title, errMsg } = this.state;\n    title.value = value;\n    title.touched = 1;\n    errMsg = \"\";\n\n    this.setState({ title, errMsg });\n  };\n\n  setDuration = (e, value) => {\n    e.preventDefault();\n    this.setState({ duration: value });\n  };\n\n  save = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n\n    let { title } = this.state;\n\n    axios\n      .post(\"api/event_type/create/\", {\n        title: title.value,\n        duration: this.state.duration,\n        user: this.state.user,\n      })\n      .then((res) => {\n        //      console.log(res);\n        if (res.status === 200) {\n          console.log(res);\n          this.props.history.goBack();\n        }\n      })\n      .catch((err) => {\n        console.log(err.response);\n        title.value = \"\";\n\n        this.setState({ title, errMsg: err.response.data });\n      });\n  };\n\n  render() {\n    // let event = this.props.location.event;\n    // console.log(props.history);\n\n    const { title } = this.state;\n\n    let duration_range = [15, 30, 45, 60];\n\n    return (\n      <div style={{ margin: \"50px 50px 50px 150px\" }}>\n        <Button\n          outline\n          color=\"primary\"\n          onClick={() => this.props.history.goBack()}\n        >\n          {\"< Back\"}\n        </Button>\n        <h4 style={{ paddingLeft: \"20rem\", display: \"inline-block\" }}>\n          Add Event Type\n        </h4>\n        <br />\n        <br />\n\n        <hr />\n        <Card\n          body\n          style={{ marginTop: \"3rem\", border: \"0.1rem #483D8B solid\" }}\n        >\n          <Form>\n            <FormGroup style={{ marginBottom: \"2rem\" }}>\n              <Label for=\"Title\" style={{ marginBottom: \"1rem\" }}>\n                Event Name*\n              </Label>\n              <Col sm={10} style={{ paddingLeft: 0 }}>\n                <Input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  placeholder={title.placeholder}\n                  value={title.value}\n                  onChange={this.changeHandle}\n                  required\n                  style={{\n                    color: \"#8a2be2\",\n                    borderColor: \"#8a2be2\",\n                    borderWidth: \"2px\",\n                  }}\n                />\n                <FormFeedback\n                  className={this.state.errMsg.length > 0 ? \"d-block\" : \"\"}\n                >\n                  {this.state.errMsg}\n                </FormFeedback>\n              </Col>\n            </FormGroup>\n\n            <Label style={{ marginBottom: \"2rem\" }}>Event Duration*</Label>\n\n            <div style={{ display: \"flex\" }} className=\"duration-list\">\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 15 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 15)}\n              >\n                15\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 30 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 30)}\n              >\n                30\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 45 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 45)}\n              >\n                45\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 60 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 60)}\n              >\n                60\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Card\n                style={{\n                  display: \"inline-block\",\n                  color: \"black\",\n                  width: \"6rem\",\n                  height: \"3.5rem\",\n                  alignSelf: \"baseline\",\n                  marginLeft: \"1rem\",\n                  textAlign: \"center\",\n                  borderColor: \"black\",\n                }}\n                className={\n                  !duration_range.includes(this.state.duration)\n                    ? \"selected-duration\"\n                    : \"\"\n                }\n              >\n                <Input\n                  type=\"number\"\n                  id=\"duration\"\n                  name=\"duration\"\n                  onChange={this.changeHandle}\n                  style={{ height: \"2rem\", width: \"4rem\" }}\n                />\n                <small style={{ display: \"block\" }}>custom min</small>\n              </Card>\n            </div>\n            <br />\n\n            <hr />\n            <FormGroup\n              style={{\n                marginTop: \"2rem\",\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                outline\n                style={{ marginRight: \"20px\" }}\n                onClick={() => this.props.history.goBack()}\n              >\n                Cancel\n              </Button>\n\n              <Button\n                color=\"primary\"\n                onClick={this.save}\n                disabled={this.state.duration === 0 || title.value === \"\"}\n              >\n                Save\n              </Button>\n            </FormGroup>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default CreateEventType;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return { isUserLogged: state.isUserLogged };\n};\n\nconst Notfound = (props) => (\n  <>{props.isUserLogged ? \"\" : <Redirect to=\"/\" />}</>\n);\n\nexport default connect(mapStateToProps)(Notfound);\n","import React, { PureComponent } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { Container, Card } from \"reactstrap\";\nimport { faCircle, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\nimport { getEventTypes } from \"./reducers\";\n\nconst mapStateToProps = (state) => {\n  let { loggedUser } = state;\n  let eventTypes = getEventTypes(state);\n  return { loggedUser, eventTypes };\n};\n\n/*\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadEventTypes: (events) => {\n      console.log(\"trigger load events\");\n\n      dispatch({ type: LOAD_EVENT_TYPES, payload: events });\n    },\n  };\n};\n*/\n\nclass Scheduler extends PureComponent {\n  /* let path=props.location.pathname;\n  let loggedUser = { name: \"Shrikant Gawas\", email: \"gawasshree@gmail.com\" };\n  let eventTypes = [\n    { id: 1, title: \"Demo Call\", duration: 45 },\n    { id: 3, title: \"Team Meeting\", duration: 45 },\n    { id: 4, title: \"Accout Review\", duration: 60 },\n  ];\n  let path = \"/appointments/shrikant-gawas-bookings/\";\n*/\n\n  componentWillUnmount() {\n    console.log(\"Scheduler unmounting\");\n  }\n\n  render() {\n    let { loggedUser, eventTypes } = this.props;\n\n    console.log(loggedUser, eventTypes);\n\n    return (\n      <div className=\"scheduler-wrapper\">\n        <Container style={{ margin: \"10px 10px\" }}>\n          <h3>{loggedUser.name}</h3>\n          <p>\n            Welcome to my scheduling page. Please follow the instructions to add\n            an event to my calender.\n          </p>\n          <Card style={{ width: \"24rem\", border: \"none\" }}>\n            <ul>\n              {eventTypes &&\n                eventTypes.length > 0 &&\n                eventTypes.map((et) => (\n                  <div key={et.id}>\n                    <hr />\n                    <li>\n                      <p\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <span>\n                          <FontAwesomeIcon\n                            icon={faCircle}\n                            style={{ color: \"#7B68EE\", marginRight: \"10px\" }}\n                          />\n                          {et.title}\n                        </span>\n                        <span>\n                          <Link\n                            to={{\n                              pathname: `${this.props.location.pathname}/panel`,\n                              user: loggedUser,\n                              event: et,\n                            }}\n                          >\n                            <FontAwesomeIcon icon={faCaretRight} />\n                          </Link>\n                        </span>\n                      </p>\n                    </li>\n                  </div>\n                ))}\n            </ul>\n          </Card>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, null)(Scheduler);\n//export default Scheduler;\n","import React, { PureComponent } from \"react\";\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Label,\n  FormGroup,\n  Button,\n  FormFeedback,\n} from \"reactstrap\";\nimport Calendar from \"react-calendar\";\nimport axios from \"axios\";\n//import { faClock } from \"@fortawesome/free-solid-svg-icons\";\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport moment from \"moment\";\nimport \"./Calendar.css\";\n\nimport validate from \"./InputComponents/Validation\";\n\nconst current_date = new Date();\n\nclass SchedularPanel extends PureComponent {\n  constructor(props) {\n    super(props);\n    /*   this.duration = Number(\n      this.props.location.event.duration.replace(\" min\", \"\")\n    );\n    */\n\n    this.event = this.props.location.event;\n    this.user = this.props.location.user;\n\n    //For testing: mock data\n    //    this.event = { id: 1, title: \"Demo Call\", duration: 10 };\n    //    this.user = { name: \"Shrikant Gawas\" };\n\n    this.bookSlots = this.event.duration / 15;\n    console.log(this.bookSlots);\n\n    this.timeSlot = [];\n\n    const periodsInADay = moment.duration(1, \"day\").as(\"m\");\n\n    console.log(\"periodsInADay:\", periodsInADay);\n\n    const startTimeMoment = moment(\"10:00\", \"HH:mm\");\n\n    const stopTimeMoment = moment(\"19:00\", \"HH:mm\");\n\n    console.log(\"startTimeMoment\", startTimeMoment);\n    console.log(\"stopTimeMoment\", stopTimeMoment);\n\n    for (let i = 0; i <= periodsInADay; i += this.event.duration) {\n      startTimeMoment.add(i === 0 ? 0 : this.event.duration, \"m\");\n      if (startTimeMoment < stopTimeMoment) {\n        this.timeSlot.push(startTimeMoment.format(\"HH:mm\"));\n      } else {\n        break;\n      }\n    }\n\n    //     this.lastIndex = this.timeSlot.length - 1;\n    //    console.log(this.lastIndex);\n    //  this.timeSlot.splice(-this.bookSlots);\n\n    this.state = {\n      selectDate: new Date(),\n      selectedSlotStart: null,\n      selectedSlotEnd: null,\n      timeSlot: this.timeSlot,\n\n      availableTimeSlots: [],\n      disableDates: [],\n      form: {\n        valid: false,\n        touched: 0,\n        successMsg: \"Event has been scheduled successfully\",\n        errMsg:\n          \"It seems there was some issue while submitting your request, kindly try once again!!!\",\n      },\n      formControls: {\n        firstName: {\n          value: \"\",\n          placeholder: \"Please enter your first-name\",\n          valid: false,\n          touched: 0,\n          validationRules: {\n            isRequired: true,\n          },\n          errMsg: \"Your first-name is required\",\n          successMsg: \"Entered first-name is valid\",\n        },\n        lastName: {\n          value: \"\",\n          placeholder: \"Please enter your last-name\",\n          valid: false,\n          touched: 0,\n          validationRules: {\n            isRequired: true,\n          },\n          errMsg: \"Your last-name is required\",\n          successMsg: \"Entered last-name is valid\",\n        },\n        email: {\n          value: \"\",\n          placeholder: \"Please enter your email id\",\n          valid: false,\n          touched: 0,\n          validationRules: {\n            isRequired: true,\n            isEmail: true,\n          },\n          errMsg: \"Please enter correct email id\",\n          successMsg: \"Entered email id is valid\",\n        },\n      },\n      scheduleAgain: false,\n    };\n  }\n\n  fetchAvailableSlots = (date) => {\n    axios\n      .get(\n        `api/schedule_events/${this.event.id}/${\n          this.event.duration\n        }?date=${date.toISOString()}`\n      )\n      .then((res) => {\n        console.log(res.status);\n        if (res.status === 200 && res.data.availableTimeSlots.length > 0) {\n          this.setState({\n            availableTimeSlots: res.data.availableTimeSlots,\n          });\n          console.log(this.state.availableTimeSlots);\n        }\n\n        if (res.status === 200 && res.data.disableDate === true) {\n          this.setState((state) => {\n            return {\n              ...state,\n              disableDates: [...state.disableDates, date.toLocaleDateString()],\n            };\n          });\n        }\n      })\n      .catch((err) => console.log);\n  };\n\n  componentDidMount() {\n    this.fetchAvailableSlots(this.state.selectDate);\n  }\n\n  disableDates = ({ date }) => {\n    console.log(date.toLocaleDateString(), current_date.toLocaleDateString());\n    return (\n      date.getDay() === 6 ||\n      date.getDay() === 0 ||\n      !(\n        date > current_date ||\n        date.toLocaleDateString() === current_date.toLocaleDateString()\n      ) ||\n      this.state.disableDates.includes(date.toLocaleDateString())\n      //       this.state.timeSlot.length === 0\n    );\n  };\n\n  onChangeDate = (date) => {\n    //    console.log(date.toLocaleDateString());\n    this.fetchAvailableSlots(date);\n    this.setState({ selectDate: date });\n  };\n\n  onClickHandler = (e, slot) => {\n    let selectedSlotStart = slot;\n    let selectedSlotEnd = moment(slot, \"HH:mm\")\n      .add(this.event.duration, \"m\")\n      .format(\"HH:mm\");\n\n    console.log(\n      \"Selected Date & Selected Slot\",\n      this.state.selectDate,\n      selectedSlotStart,\n      selectedSlotEnd\n    );\n    this.setState({\n      selectedSlotStart,\n      selectedSlotEnd,\n    });\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    let { form, formControls } = this.state;\n\n    const updatedControls = {\n      ...formControls,\n    };\n\n    const updatedFormElement = {\n      ...updatedControls[name],\n    };\n\n    updatedFormElement.value = value;\n    updatedFormElement.touched = 1;\n    updatedFormElement.valid = validate(\n      value,\n      updatedFormElement.validationRules\n    );\n\n    updatedControls[name] = updatedFormElement;\n\n    form.valid = true;\n    form.touched = 1;\n\n    for (let inputIdentifier in updatedControls) {\n      form.valid = updatedControls[inputIdentifier].valid && form.valid;\n      if (form.valid === false) {\n        form.touched = 0;\n      }\n    }\n\n    this.setState({\n      formControls: updatedControls,\n      form,\n    });\n  };\n\n  scheduleAgain = (event) => {\n    event.preventDefault();\n    let {\n      form,\n      selectDate,\n      selectedSlotStart,\n      selectedSlotEnd,\n      formControls,\n      scheduleAgain,\n    } = this.state;\n\n    scheduleAgain = true;\n\n    formControls.firstName.valid = false;\n    formControls.firstName.touched = 0;\n\n    formControls.lastName.valid = false;\n    formControls.lastName.touched = 0;\n    formControls.email.valid = false;\n    formControls.email.touched = 0;\n    form.valid = true;\n    form.touched = 1;\n    selectedSlotStart = null;\n    selectedSlotEnd = null;\n    selectDate = new Date();\n\n    this.setState(\n      {\n        form,\n        selectDate,\n        selectedSlotStart,\n        selectedSlotEnd,\n        formControls,\n        scheduleAgain,\n      },\n      () => this.fetchAvailableSlots(this.state.selectDate)\n    );\n  };\n\n  scheduleEvent = (event) => {\n    event.preventDefault();\n    let { selectDate } = this.state;\n\n    let { formControls, form } = this.state;\n    let firstName = formControls.firstName;\n    let lastName = formControls.lastName;\n    let email = formControls.email;\n\n    let data = {\n      firstName: firstName.value,\n      lastName: lastName.value,\n      email: email.value,\n      selectDate: selectDate.toISOString(),\n      selectedSlotStart: this.state.selectedSlotStart,\n      selectedSlotEnd: this.state.selectedSlotEnd,\n    };\n\n    console.log(\"scheduled event data:\", data);\n\n    axios\n      .post(`/api/schedule_event/${this.event.id}`, data)\n      .then((res) => {\n        console.log(res);\n        /*      firstName = { ...firstName, value: \"\", touched: 0, valid: false };\n        lastName = { ...lastName, value: \"\", touched: 0, valid: false };\n        email = { ...email, value: \"\", touched: 0, valid: false };\n\n          formControls = {\n          ...formControls,\n          firstName,\n          lastName,\n          email,\n        };\n*/\n        form = { ...form, touched: 0 };\n\n        this.setState({\n          //        formControls,\n          form,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n\n        firstName = { ...firstName, value: \"\", touched: 0, valid: false };\n        lastName = { ...lastName, value: \"\", touched: 0, valid: false };\n        email = { ...email, value: \"\", touched: 0, valid: false };\n\n        form = { ...form, valid: false, touched: 1 };\n\n        form.errMsg = err.response.data;\n\n        formControls = {\n          ...formControls,\n          firstName,\n          lastName,\n          email,\n        };\n\n        this.setState({\n          formControls,\n          form,\n        });\n      });\n  };\n\n  render() {\n    /*  console.log(this.props);\n\n    let backLink = this.props.location.pathname.replace(\"/panel\", \"\");\n\n    let event = this.props.location.event;\n\n    let user = this.props.location.user;\n\n    */\n\n    /* <p> {props.location.duration} </p>\n  <p> {props.location.user.name} </p>\n*/\n\n    const {\n      availableTimeSlots,\n      timeSlot,\n      selectDate,\n      form,\n      scheduleAgain,\n    } = this.state;\n    const { firstName, lastName, email } = this.state.formControls;\n\n    console.log(\"now date:\", selectDate.toLocaleDateString());\n\n    let timeSlotDisplay = [];\n\n    if (availableTimeSlots.length > 0) {\n      timeSlotDisplay = availableTimeSlots;\n    } else {\n      timeSlotDisplay = timeSlot;\n    }\n\n    //  if (data.length > 0) {\n\n    // }\n\n    return (\n      <div className=\"scheduler-panel-wrapper\">\n        {form.valid && form.touched === 0 ? (\n          <div className=\"confirmed\">\n            <p style={{ textAlign: \"center\", marginBottom: \"1rem\" }}>\n              <strong>Confirmed</strong>\n              <br />\n              You are scheduled with {firstName.value} {lastName.value}.\n            </p>\n            <hr />\n            <div>\n              <span>\n                <i\n                  className=\"fas fa-circle\"\n                  style={{ color: \"#7B68EE\", marginRight: \"10px\" }}\n                />\n                {this.event.title}\n              </span>\n              <br />\n              <p style={{ color: \"#2E8B57\", marginTop: \"2rem\" }}>\n                <i\n                  className=\"far fa-calendar\"\n                  style={{ marginRight: \"10px\" }}\n                />\n                {`${moment(this.state.selectedSlotStart, \"hh:mm A\").format(\n                  \"hh:mm A\"\n                )} - ${moment(this.state.selectedSlotEnd, \"hh:mm A\").format(\n                  \"hh:mm A\"\n                )},\n                    ${this.state.selectDate.toDateString()}`}\n              </p>\n            </div>\n            <hr />\n            <Button\n              outline\n              color=\"primary\"\n              className=\"schedule-again-btn\"\n              onClick={this.scheduleAgain}\n            >\n              <i\n                className=\"fas fa-arrow-right\"\n                style={{ marginRight: \"10px\" }}\n              />\n              Click to schedule another event with {firstName.value}{\" \"}\n              {lastName.value}\n            </Button>\n          </div>\n        ) : (\n          <Row>\n            <Col className=\"column-first\" xs={4}>\n              <div style={{ marginTop: \"50px\", textAlign: \"left\" }}>\n                <p>\n                  <i\n                    className=\"fas fa-arrow-circle-left\"\n                    style={{ color: \"blue\", fontSize: \"2rem\" }}\n                    onClick={() => this.props.history.goBack()}\n                  />\n                </p>\n                <small style={{ color: \"grey\" }}>{this.user.name}</small>\n                <h4>{this.event.title}</h4>\n                <i className=\"fas fa-clock\" style={{ color: \"grey\" }} />{\" \"}\n                <small style={{ color: \"grey\" }}>\n                  {this.event.duration} mins\n                </small>\n                {this.state.selectDate &&\n                this.state.selectedSlotStart &&\n                this.state.selectedSlotEnd ? (\n                  <p style={{ color: \"#2E8B57\", marginTop: \"2rem\" }}>\n                    <i className=\"far fa-calendar\"></i>{\" \"}\n                    {`${moment(this.state.selectedSlotStart, \"hh:mm A\").format(\n                      \"hh:mm A\"\n                    )} - ${moment(this.state.selectedSlotEnd, \"hh:mm A\").format(\n                      \"hh:mm A\"\n                    )},\n                    ${this.state.selectDate.toDateString()}`}\n                  </p>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </Col>\n\n            <Col className=\"column-second\">\n              {this.state.selectDate &&\n              this.state.selectedSlotStart &&\n              this.state.selectedSlotEnd ? (\n                <div style={{ marginTop: \"2rem\" }}>\n                  <h4>Enter Details</h4>\n                  <Form className=\"form\">\n                    <Row form>\n                      <Col md={6}>\n                        <FormGroup>\n                          <Label for=\"firstName\">First Name*</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"firstName\"\n                            name=\"firstName\"\n                            className=\"input\"\n                            value={firstName.value}\n                            placeholder={firstName.placeholder}\n                            touched={firstName.touched}\n                            valid={firstName.valid}\n                            disabled={scheduleAgain}\n                            onChange={this.handleChange}\n                          />\n                          <FormFeedback valid>\n                            {firstName.successMsg}\n                          </FormFeedback>\n                          <FormFeedback\n                            className={\n                              firstName.touched === 1 &&\n                              firstName.valid === false\n                                ? \"d-block\"\n                                : \"\"\n                            }\n                          >\n                            {firstName.errMsg}\n                          </FormFeedback>\n                        </FormGroup>\n                      </Col>\n                      <Col md={6}>\n                        <FormGroup>\n                          <Label for=\"lastName\">Last Name*</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"lastName\"\n                            name=\"lastName\"\n                            className=\"input\"\n                            value={lastName.value}\n                            placeholder={lastName.placeholder}\n                            touched={lastName.touched}\n                            valid={lastName.valid}\n                            onChange={this.handleChange}\n                            disabled={scheduleAgain}\n                          />\n                          <FormFeedback valid>\n                            {lastName.successMsg}\n                          </FormFeedback>\n                          <FormFeedback\n                            className={\n                              lastName.touched === 1 && lastName.valid === false\n                                ? \"d-block\"\n                                : \"\"\n                            }\n                          >\n                            {lastName.errMsg}\n                          </FormFeedback>\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <FormGroup>\n                      <Label for=\"email\">Email*</Label>\n                      <Input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        className=\"input\"\n                        value={email.value}\n                        placeholder={email.placeholder}\n                        touched={email.touched}\n                        valid={email.valid}\n                        disabled={scheduleAgain}\n                        onChange={this.handleChange}\n                      />\n                      <FormFeedback valid>{email.successMsg}</FormFeedback>\n                      <FormFeedback\n                        className={\n                          email.touched === 1 && email.valid === false\n                            ? \"d-block\"\n                            : \"\"\n                        }\n                      >\n                        {email.errMsg}\n                      </FormFeedback>\n                    </FormGroup>\n                    <FormGroup>\n                      <Button\n                        color=\"primary\"\n                        className=\"button\"\n                        disabled={form.valid === false}\n                        onClick={this.scheduleEvent}\n                      >\n                        Schedule Event\n                      </Button>\n                    </FormGroup>\n                    <FormFeedback\n                      className={\n                        form.valid === false && form.touched === 1\n                          ? \"d-block\"\n                          : \"\"\n                      }\n                    >\n                      {form.errMsg}\n                    </FormFeedback>\n                  </Form>\n                </div>\n              ) : (\n                <>\n                  <Col>\n                    <div>\n                      <p style={{ textAlign: \"right\" }}>\n                        {this.state.selectDate.toDateString()}\n                      </p>\n                      <p style={{ textAlign: \"left\" }}>Select a Date & Time</p>\n                      <Calendar\n                        onChange={this.onChangeDate}\n                        value={this.state.selectDate}\n                        tileDisabled={this.disableDates}\n                      />\n                    </div>\n                  </Col>\n                  <Col>\n                    <div>\n                      <ul className=\"list\">\n                        {timeSlotDisplay &&\n                          timeSlotDisplay.length > 0 &&\n                          timeSlotDisplay.map((slot, index) => (\n                            <li\n                              key={index}\n                              onClick={(event) =>\n                                this.onClickHandler(event, slot)\n                              }\n                            >\n                              {moment(slot, \"hh:mm A\").format(\"hh:mm A\")}\n                            </li>\n                          ))}\n                      </ul>\n                    </div>\n                  </Col>\n                </>\n              )}\n            </Col>\n          </Row>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SchedularPanel;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from \"reactstrap\";\n\nimport CustomRoute from \"./CustomRoute\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport ResetPassword from \"./ResetPassword\";\nimport UpdatePassword from \"./UpdatePassword\";\nimport Schedule from \"./Schedule\";\nimport EditEventType from \"./EditEventType\";\nimport CreateEventType from \"./CreateEventType\";\n\nimport Notfound from \"./NotFound\";\n\nimport \"./App.css\";\nimport Scheduler from \"./Scheduler\";\nimport SchedulerPanel from \"./SchedulerPanel\";\nimport { LOGOUT } from \"./reducers\";\n\nconst mapStateToProps = (state) => {\n  //let [loggedUser] = state.users.filter((x) => x.isLoggedIn === true);\n\n  console.log(state.isUserLogged);\n  return { isUserLogged: state.isUserLogged, loggedUser: state.loggedUser };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logOut: () => {\n      // console.log(\"Set Login flag called\");\n      dispatch({ type: LOGOUT });\n    },\n  };\n};\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = () => this.setState({ isOpen: !this.state.isOpen });\n\n  render() {\n    let name = this.props.loggedUser.name;\n\n    let cust = name.replace(/\\s+/g, \"-\").toLowerCase();\n\n    let customAppointmentLink = `/appointments/${cust}-bookings`;\n\n    // mocked custome appointment link for testing Schedular\n    //   let customAppointmentLink = \"/appointments/shrikant-gawas-bookings\";\n\n    console.log(customAppointmentLink);\n    return (\n      <div>\n        {this.props.isUserLogged ? (\n          <Navbar\n            color=\"dark\"\n            dark\n            expand=\"md\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-end\",\n            }}\n          >\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <NavbarText>\n                <UncontrolledDropdown>\n                  <DropdownToggle nav style={{ margin: 0, padding: 0 }}>\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        borderRadius: \"50%\",\n                        border: \"2px grey solid\",\n                        width: \"35px\",\n                        height: \"35px\",\n                        color: \"black\",\n                        lineHeight: \"35px\",\n                        textAlign: \"center\",\n                        backgroundColor: \"silver\",\n                        marginRight: \"0.5rem\",\n                      }}\n                    >\n                      {name.charAt(0)}\n                    </span>\n                    <span\n                      style={{\n                        color: \"silver\",\n                        fontSize: \"0.8rem\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {name}\n                    </span>\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem onClick={this.props.logOut}>\n                      Logout\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </NavbarText>\n            </Collapse>\n          </Navbar>\n        ) : (\n          \"\"\n        )}\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <CustomRoute\n              exact\n              path=\"/schedule\"\n              render={() => (\n                <Schedule customAppointmentLink={customAppointmentLink} />\n              )}\n            />\n\n            <CustomRoute\n              exact\n              //     isUserLogged={this.props.isUserLogged}\n              path={customAppointmentLink}\n              // MyComponent={(props) => <Scheduler {...props} />}\n              component={Scheduler}\n            />\n\n            <CustomRoute\n              exact\n              path={`${customAppointmentLink}/panel`}\n              component={SchedulerPanel}\n            />\n\n            <CustomRoute\n              exact\n              path=\"/event_type/edit/\"\n              component={EditEventType}\n              //render={(props) => <EditEventType {...props} />}\n            />\n\n            <CustomRoute\n              exact\n              path=\"/event_type/create/\"\n              component={CreateEventType}\n            />\n\n            <Route exact path=\"/resetpassword\" component={ResetPassword} />\n\n            <Route\n              exact\n              path=\"/password/reset/:email/:token\"\n              render={({ match }) => (\n                <UpdatePassword\n                  email={match.params.email}\n                  token={match.params.token}\n                />\n              )}\n            />\n            <Route component={Notfound} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n//import { BrowserRouter as Router, Switch } from \"react-router-dom\";\n//import { createBrowserHistory } from \"history\";\nimport rootReducer, { initialState } from \"./reducers\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./index.scss\";\n\n//import \"./fontawesome\";\n\nlet init = initialState;\n\nconst persistedState = localStorage.getItem(\"appointment-scheduler\");\n\nif (persistedState) {\n  init = JSON.parse(persistedState);\n}\n\nconst store = createStore(rootReducer, init);\n\n//console.log(JSON.stringify(store.getState()));\n\nstore.subscribe(() => {\n  localStorage.setItem(\n    \"appointment-scheduler\",\n    JSON.stringify(store.getState())\n  );\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}