{"version":3,"sources":["reducers.js","Login.js","Signup.js","ResetPassword.js","UpdatePassword.js","SchedulerPanel.js","Scheduler.js","CreateEventType.js","EventType/ShowEventTypes.js","Paginator.js","Schedule.js","EditEventType.js","NotFound.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isUserLogged","loggedUser","name","email","eventTypes","auth","state","action","console","log","type","users","last","length","lastElement","lastId","userId","payload","contact","username","password","Login","props","matchUser","ip_email","ip_password","data","axios","post","then","res","status","setLoggedUser","history","push","catch","err","onInputChange","event","target","value","isError","form","setState","onSubmit","preventDefault","usrRef","React","createRef","pwdRef","this","to","Jumbotron","Container","Form","FormGroup","Label","for","Input","id","placeholder","onChange","invalid","FormFeedback","Button","Component","connect","dispatch","user","Signup","confirm_password","errors","handleChange","register","htmlFor","ResetPassword","submitted","e","sendPasswordResetEmail","UpdatePassword","confirmPassword","key","updatePassword","token","SchedularPanel","disableDates","date","getDay","Date","onChangeDate","toLocaleDateString","selectDate","onClickHandler","index","oldTimeSlot","timeSlot","duration","selectedSlotStart","selectedSlotEnd","splice","scheduleEvent","curDate","getDate","curMonth","getMonth","curYear","getFullYear","nowDate","firstName","lastName","emailAddress","location","bookSlots","periodsInADay","moment","as","startTimeMoment","stopTimeMoment","i","add","format","get","Array","isArray","dates","cur","filter","a","for_cur_date","className","Row","Col","style","borderRight","width","height","display","justifyContent","xs","marginTop","textAlign","color","fontSize","onClick","goBack","title","toDateString","padding","md","tileDisabled","availableTimeSlots","overflow","map","slot","margin","border","borderRadius","Card","et","icon","faCircle","marginRight","pathname","faCaretRight","CreateEventType","changeHandle","setDuration","save","outline","paddingLeft","body","marginBottom","sm","required","borderColor","borderWidth","alignSelf","marginLeft","includes","Paginator","handleClick","offsetEnd","perPage","offsetStart","slice","displayData","currPage","offset","next","pageCount","previous","Math","ceil","buttons","evt","CardTitle","Table","time_slot_start","time_slot_end","first_name","last_name","ButtonGroup","Schedule","cust","customAppointmentLink","setActiveTab","activeTab","setSubActiveTab","subActiveTab","getEventTypesFromAPI","event_types","loadEventTypes","getUpcomingPastDataFromAPI","upcoming_events","upcoming","past_events","past","updateEventTypes","fontFamily","backgroundColor","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","textDecoration","CardDeck","CardText","CardFooter","logout","events","EditEventType","put","duration_range","Notfound","CustomRoute","MyComponent","rest","render","App","isOpen","toggle","replace","toLowerCase","Navbar","dark","expand","flexDirection","alignItems","Collapse","navbar","NavbarText","UncontrolledDropdown","DropdownToggle","nav","lineHeight","charAt","fontWeight","DropdownMenu","right","DropdownItem","exact","path","component","Scheduler","SchedulerPanel","match","params","Boolean","window","hostname","store","createStore","rootReducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.65eca675.chunk.js","sourcesContent":["export const SIGNUP = \"SIGNUP\";\nexport const LOGIN = \"LOGIN\";\n//export const UPDATE = \"UPDATE\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOAD_EVENT_TYPES = \"LOAD_EVENT_TYPES\";\n\nexport const initialState = {\n  isUserLogged: false,\n  loggedUser: {\n    name: \"\",\n    email: \"\",\n  },\n  eventTypes: [],\n};\n\nconst auth = (state = initialState, action) => {\n  console.log(action.type);\n  switch (action.type) {\n    case \"SIGNUP\":\n      let { users } = state;\n      let last = users.length;\n\n      let lastElement = users[last - 1];\n\n      let lastId = lastElement.userId;\n\n      //console.log(lastId);\n\n      return {\n        loggedUser: 0,\n        users: [\n          ...state.users,\n          {\n            userId: lastId + 1,\n            name: action.payload.name,\n            contact: action.payload.contact,\n            email: action.payload.email,\n            username: action.payload.username,\n            password: action.payload.password,\n          },\n        ],\n      };\n\n    case \"LOGIN\":\n      console.log(\"Login initiated\");\n      return {\n        isUserLogged: true,\n        loggedUser: action.payload,\n      };\n\n    case \"LOGOUT\":\n      console.log(\"Hey\");\n      return {\n        loggedUser: { name: \"\", email: \"\" },\n      };\n\n    case \"LOAD_EVENT_TYPES\":\n      console.log(\"Load events initiated: \", action.payload);\n      return {\n        ...state,\n        eventTypes: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport {\n  Jumbotron,\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport axios from \"axios\";\n//import history from \"./history\";\nimport { connect } from \"react-redux\";\nimport { LOGIN } from \"./reducers\";\n\nconst mapStateToProps = (state) => {\n  let { loggedUser, isUserLogged } = state;\n\n  return { loggedUser, isUserLogged };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setLoggedUser: (user) => {\n      // console.log(\"Set Login flag called\");\n      dispatch({ type: LOGIN, payload: user });\n    },\n  };\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isError: {\n        email: \"\",\n        password: \"\",\n        form: \"\",\n      },\n    };\n\n    this.usrRef = React.createRef();\n    this.pwdRef = React.createRef();\n  }\n\n  matchUser = (ip_email, ip_password) => {\n    let data = { email: ip_email, password: ip_password };\n\n    // let { history } = this.props;\n    axios\n      .post(\"/auth/login\", data)\n      .then((res) => {\n        if (res.status === 200) {\n          //console.log(res);\n          this.props.setLoggedUser({ email: data.email, name: res.data.name });\n          this.props.history.push(\"/app/schedule\");\n        }\n      })\n      .catch((err) => console.log);\n  };\n\n  onInputChange = (event) => {\n    const { name, value } = event.target;\n\n    let isError = {\n      ...this.state.isError,\n    };\n\n    //console.log(isError);\n\n    isError.form = \"\";\n\n    switch (name) {\n      case \"email\":\n        isError.email = value.length > 0 ? \"\" : \"Kindly enter your email id\";\n        break;\n      case \"password\":\n        isError.password = value.length > 0 ? \"\" : \"Kindly enter your password\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ isError, [name]: value });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    console.log(\"Submit Clicked!!!\");\n\n    const { email, password } = this.state;\n\n    let isError = { ...this.state.isError };\n\n    isError.form = \"\";\n\n    if (email.length === 0 && password === \"\") {\n      isError.email = \"Kindly enter your email id\";\n      isError.password = \"Kindly enter your password\";\n    } else if (email.length === 0) {\n      isError.username = \"Kindly enter your email id\";\n    } else if (password === \"\") {\n      isError.password = \"Kindly enter your password\";\n    } else {\n      this.matchUser(email, password);\n    }\n    //console.log(isError.form);\n    this.setState({ isError });\n  };\n\n  render() {\n    const { isError } = this.state;\n\n    console.log(this.props.loggedUser);\n\n    return (\n      <>\n        {this.props.isUserLogged ? (\n          <Redirect to=\"/app/schedule\" />\n        ) : (\n          <Jumbotron>\n            <Container>\n              <Form onSubmit={this.onSubmit}>\n                <FormGroup>\n                  <Label for=\"email\">Email</Label>\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    placeholder=\"Enter your email-id\"\n                    onChange={this.onInputChange}\n                    invalid={isError.email.length > 0}\n                  />\n                  <FormFeedback invalid=\"{isError.email.length > 0}\">\n                    {isError.email}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"password\">Password</Label>\n                  <Input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"Enter your password\"\n                    onChange={this.onInputChange}\n                    invalid={isError.password.length > 0}\n                  />\n                  <FormFeedback invalid=\"{isError.password.length > 0}\">\n                    {isError.password}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Button type=\"submit\">Submit</Button>\n                  <FormFeedback invalid=\"{isError.form.length > 0}\">\n                    {isError.form}\n                  </FormFeedback>\n                </FormGroup>\n              </Form>\n            </Container>\n          </Jumbotron>\n        )}\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Signup extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\",\n    errors: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n    },\n  };\n\n  handleChange = (event) => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  register = (event) => {\n    event.preventDefault();\n    let { errors, ...data } = this.state;\n    let { confirm_password, ...user } = data;\n\n    console.log(user);\n\n    axios\n      .post(\"api/user/register\", user)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => console.log(\"Error is \", err));\n  };\n\n  render() {\n    return (\n      <div>\n        <p>SignUp Page</p>\n        <form onSubmit={this.register}>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Enter full name\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email id\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"text\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"confirm_password\">Confirm Password:</label>\n          <input\n            type=\"text\"\n            id=\"confirm_password\"\n            name=\"confirm_password\"\n            placeholder=\"Confirm password\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst SERVER_URI = \"http://localhost:3001\";\n\nclass ResetPassword extends Component {\n  state = {\n    email: \"\",\n    submitted: false,\n  };\n\n  handleChange = (e) => {\n    this.setState({ email: e.target.value });\n  };\n\n  sendPasswordResetEmail = (e) => {\n    e.preventDefault();\n    const { email } = this.state;\n    axios.post(`${SERVER_URI}/reset_password/user/${email}`);\n    this.setState({ email: \"\", submitted: true });\n  };\n\n  render() {\n    const { email, submitted } = this.state;\n    return (\n      <>\n        {submitted ? (\n          <div>\n            <p>\n              If that account is in our system, we emailed you a link to reset\n              your password.\n            </p>\n            <Link to=\"/\">Return to sign in</Link>\n          </div>\n        ) : (\n          <div>\n            <form onSubmit={this.sendPasswordResetEmail}>\n              <input\n                type=\"text\"\n                value={email}\n                placeholder=\"Enter your email-id\"\n                onChange={this.handleChange}\n              />\n              <button type=\"submit\">Submit</button>\n            </form>\n            <Link to=\"/\">I remember my password</Link>\n          </div>\n        )}\n      </>\n    );\n  }\n}\nexport default ResetPassword;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst SERVER_URI = \"http://localhost:3001\";\n\nclass UpdatePassword extends Component {\n  state = {\n    password: \"\",\n    confirmPassword: \"\",\n    submitted: false,\n  };\n\n  handleChange = (key) => (e) => {\n    this.setState({ [key]: e.target.value });\n  };\n\n  updatePassword = (e) => {\n    e.preventDefault();\n    const { email, token } = this.props;\n    const { password } = this.state;\n    console.log(password);\n    axios\n      .post(\n        `${SERVER_URI}/reset_password/receive_new_password/${email}/${token}`,\n        { password }\n      )\n      .then((res) => console.log(\"RESPONSE FROM SERVER TO CLIENT:\", res))\n      .catch((err) => console.log(\"SERVER ERROR TO CLIENT:\", err));\n    this.setState({ submitted: !this.state.submitted });\n  };\n\n  render() {\n    const { submitted } = this.state;\n\n    return (\n      <>\n        {submitted ? (\n          <div>\n            <p>Your password has been saved.</p>\n            <Link to=\"/\">Login</Link>\n          </div>\n        ) : (\n          <div>\n            <form onSubmit={this.updatePassword}>\n              <input\n                onChange={this.handleChange(\"password\")}\n                value={this.state.password}\n                placeholder=\"New password\"\n                type=\"password\"\n              />\n              <input\n                onChange={this.handleChange(\"confirmPassword\")}\n                value={this.state.confirmPassword}\n                placeholder=\"Confirm password\"\n                type=\"password\"\n              />\n              <button type=\"submit\">Update Password</button>\n            </form>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default UpdatePassword;\n","import React, { Component, useState } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Input,\n  Label,\n  FormGroup,\n  Button,\n} from \"reactstrap\";\nimport Calendar from \"react-calendar\";\nimport axios from \"axios\";\n//import { faClock } from \"@fortawesome/free-solid-svg-icons\";\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport moment from \"moment\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./SchedulerPanel.css\";\nimport { Link } from \"react-router-dom\";\n\nclass SchedularPanel extends Component {\n  constructor(props) {\n    super(props);\n    /*   this.duration = Number(\n      this.props.location.event.duration.replace(\" min\", \"\")\n    );\n    */\n\n    this.event = this.props.location.event;\n    this.user = this.props.location.user;\n\n    this.bookSlots = this.event.duration / 15;\n    console.log(this.bookSlots);\n\n    this.timeSlot = [];\n\n    const periodsInADay = moment.duration(1, \"day\").as(\"m\");\n\n    console.log(\"periodsInADay:\", periodsInADay);\n\n    const startTimeMoment = moment(\"10:00\", \"hh:mm\");\n\n    const stopTimeMoment = moment(\"19:00\", \"hh:mm\");\n\n    console.log(\"startTimeMoment\", startTimeMoment);\n    console.log(\"stopTimeMoment\", stopTimeMoment);\n\n    for (let i = 0; i <= periodsInADay; i += this.event.duration) {\n      startTimeMoment.add(i === 0 ? 0 : this.event.duration, \"m\");\n      if (startTimeMoment < stopTimeMoment) {\n        this.timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\n      } else {\n        break;\n      }\n    }\n\n    //     this.lastIndex = this.timeSlot.length - 1;\n    //    console.log(this.lastIndex);\n    //  this.timeSlot.splice(-this.bookSlots);\n\n    this.state = {\n      selectDate: new Date(),\n\n      timeSlot: this.timeSlot,\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`api/schedule_events/${this.event.id}/${this.event.duration}`)\n      .then((res) => {\n        console.log(res.status);\n        if (res.status === 200) {\n          this.setState((state) => {\n            console.log(Array.isArray(res.data.dates));\n            return { ...state, data: res.data.dates };\n          });\n          console.log(this.state.data);\n        }\n      })\n      .catch((err) => console.log);\n  }\n\n  disableDates = ({ date }) => {\n    // console.log(date.toLocaleDateString());\n    return (\n      date.getDay() === 6 || date.getDay() === 0 || date < new Date()\n      // || this.state.datesToDisable.includes(date.toLocaleDateString())\n      //       this.state.timeSlot.length === 0\n    );\n  };\n\n  onChangeDate = (e) => {\n    console.log(e.toLocaleDateString());\n    this.setState({\n      selectDate: e,\n    });\n\n    //   return;\n  };\n\n  onClickHandler = (e, index) => {\n    let oldTimeSlot = [...this.state.timeSlot];\n\n    let duration = this.event.duration;\n    console.log(duration);\n\n    let selectedSlotStart = oldTimeSlot[index];\n    let selectedSlotEnd = oldTimeSlot[index + 1];\n\n    oldTimeSlot.splice(index, 1);\n\n    console.log(\n      \"Selected Date & Selected Slot\",\n      this.state.selectDate,\n      selectedSlotStart,\n      selectedSlotEnd\n    );\n    this.setState({\n      timeSlot: oldTimeSlot,\n      selectedSlotStart,\n      selectedSlotEnd,\n    });\n  };\n\n  handleChange = (event) => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  scheduleEvent = (event) => {\n    event.preventDefault();\n    let { selectDate } = this.state;\n\n    let curDate = selectDate.getDate();\n    let curMonth = selectDate.getMonth() + 1;\n    let curYear = selectDate.getFullYear();\n\n    let nowDate = `${curYear}-${curMonth}-${curDate}`;\n\n    console.log(\"Schedule date\", nowDate);\n\n    let data = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      emailAddress: this.state.emailAddress,\n      selectDate: nowDate,\n      selectedSlotStart: this.state.selectedSlotStart,\n      selectedSlotEnd: this.state.selectedSlotEnd,\n    };\n\n    console.log(\"scheduled event data:\", data);\n\n    axios\n      .post(`api/schedule_event/${this.event.id}`, data)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => console.log);\n  };\n\n  render() {\n    /*  console.log(this.props);\n\n    let backLink = this.props.location.pathname.replace(\"/panel\", \"\");\n\n    let event = this.props.location.event;\n\n    let user = this.props.location.user;\n\n    */\n\n    /* <p> {props.location.duration} </p>\n  <p> {props.location.user.name} </p>\n*/\n\n    const { data, selectDate } = this.state;\n\n    console.log(\"now date:\", selectDate.toLocaleDateString());\n\n    //  if (data.length > 0) {\n    let cur = data.filter((a) => {\n      console.log(\"date in db\", a.date);\n      return a.date === selectDate.toLocaleDateString();\n    });\n    let [for_cur_date] = cur;\n    console.log(for_cur_date);\n    console.log(selectDate);\n    // }\n\n    return (\n      <Container className=\"Container\">\n        <Row>\n          <Col\n            style={{\n              //   background: \"lightgrey\",\n              borderRight: \"1px solid #E6E6FA\",\n              width: \"50%\",\n              height: \"96vh\",\n              display: \"flex\",\n              justifyContent: \"left\",\n            }}\n            xs={4}\n          >\n            <div style={{ marginTop: \"50px\", textAlign: \"left\" }}>\n              <p>\n                <i\n                  className=\"fas fa-arrow-circle-left\"\n                  style={{ color: \"blue\", fontSize: \"2rem\" }}\n                  onClick={() => this.props.history.goBack()}\n                />\n              </p>\n              <small style={{ color: \"grey\" }}>{this.user.name}</small>\n              <h4>{this.event.title}</h4>\n              <i className=\"fas fa-clock\" style={{ color: \"grey\" }} />{\" \"}\n              <small style={{ color: \"grey\" }}>{this.event.duration}</small>\n              {this.state.selectDate &&\n              this.state.selectedSlotStart &&\n              this.state.selectedSlotEnd ? (\n                <p style={{ color: \"#2E8B57\", marginTop: \"2rem\" }}>\n                  <i className=\"far fa-calendar\"></i>{\" \"}\n                  {`${this.state.selectedSlotStart} - ${\n                    this.state.selectedSlotEnd\n                  },\n                    ${this.state.selectDate.toDateString()}`}\n                </p>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </Col>\n\n          <Col\n            style={{\n              padding: \"10px\",\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            {this.state.selectDate &&\n            this.state.selectedSlotStart &&\n            this.state.selectedSlotEnd ? (\n              <div style={{ marginTop: \"2rem\" }}>\n                <h4>Enter Details</h4>\n                <Form style={{ marginTop: \"2rem\" }}>\n                  <Row form>\n                    <Col md={6}>\n                      <FormGroup>\n                        <Label for=\"firstName\">First Name*</Label>\n                        <Input\n                          type=\"text\"\n                          id=\"firstName\"\n                          name=\"firstName\"\n                          onChange={this.handleChange}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md={6}>\n                      <FormGroup>\n                        <Label for=\"lastName\">Last Name*</Label>\n                        <Input\n                          type=\"text\"\n                          id=\"lastName\"\n                          name=\"lastName\"\n                          onChange={this.handleChange}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <FormGroup>\n                    <Label for=\"emailAddress\">Email*</Label>\n                    <Input\n                      type=\"email\"\n                      id=\"emailAddress\"\n                      name=\"emailAddress\"\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Button color=\"primary\" onClick={this.scheduleEvent}>\n                      Schedule Event\n                    </Button>\n                  </FormGroup>\n                </Form>\n              </div>\n            ) : (\n              <>\n                <Col>\n                  <div>\n                    <p style={{ textAlign: \"right\" }}>\n                      {\" \"}\n                      {this.state.selectDate.toDateString()}{\" \"}\n                    </p>\n                    <p style={{ textAlign: \"left\" }}>Select a Date & Time</p>\n                    <Calendar\n                      onChange={this.onChangeDate}\n                      value={this.state.selectDate}\n                      tileDisabled={this.disableDates}\n                    />\n                  </div>\n                </Col>\n                <Col>\n                  <div>\n                    {for_cur_date && for_cur_date.availableTimeSlots ? (\n                      <ul style={{ height: \"90vh\", overflow: \"scroll\" }}>\n                        {for_cur_date.availableTimeSlots.map((slot, index) => (\n                          <li\n                            style={{\n                              margin: \"0.5rem\",\n                              padding: \"1rem\",\n                              width: \"90%\",\n                              height: \"10%\",\n                              border: \"1px solid skyblue\",\n                              borderRadius: \"4px\",\n                            }}\n                            key={index}\n                            onClick={(event) =>\n                              this.onClickHandler(event, index)\n                            }\n                          >\n                            {slot}\n                          </li>\n                        ))}\n                      </ul>\n                    ) : (\n                      <ul style={{ height: \"90vh\", overflow: \"scroll\" }}>\n                        {this.state.timeSlot.map((slot, index) => (\n                          <li\n                            style={{\n                              margin: \"0.5rem\",\n                              padding: \"1rem\",\n                              width: \"90%\",\n                              height: \"10%\",\n                              border: \"1px solid skyblue\",\n                              borderRadius: \"4px\",\n                            }}\n                            key={index}\n                            onClick={(event) =>\n                              this.onClickHandler(event, index)\n                            }\n                          >\n                            {slot}\n                          </li>\n                        ))}\n                      </ul>\n                    )}\n                  </div>\n                </Col>\n              </>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default SchedularPanel;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Jumbotron, Container, Card } from \"reactstrap\";\nimport { faCircle, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\nimport SchedulerPanel from \"./SchedulerPanel\";\n\nconst mapStateToProps = (state) => {\n  let { loggedUser, eventTypes } = state;\n\n  return { loggedUser, eventTypes };\n};\n\n/*\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadEventTypes: (events) => {\n      console.log(\"trigger load events\");\n\n      dispatch({ type: LOAD_EVENT_TYPES, payload: events });\n    },\n  };\n};\n*/\n\nconst Scheduler = (props) => {\n  let { loggedUser, eventTypes } = props;\n\n  console.log(loggedUser, eventTypes);\n\n  /* let path=props.location.pathname;\n  let loggedUser = { name: \"Shrikant Gawas\", email: \"gawasshree@gmail.com\" };\n  let eventTypes = [\n    { id: 1, title: \"Demo Call\", duration: 45 },\n    { id: 3, title: \"Team Meeting\", duration: 45 },\n    { id: 4, title: \"Accout Review\", duration: 60 },\n  ];\n  let path = \"/appointments/shrikant-gawas-bookings/\";\n*/\n  return (\n    <div className=\"main\">\n      <Container style={{ margin: \"10px 10px\" }}>\n        <h3>{loggedUser.name}</h3>\n        <p>\n          Welcome to my scheduling page. Please follow the instructions to add\n          an event to my calender.\n        </p>\n        <Card style={{ width: \"24rem\", border: \"none\" }}>\n          <ul>\n            {eventTypes.length > 0 &&\n              eventTypes.map((et) => (\n                <div key={et.id}>\n                  <hr />\n                  <li>\n                    <p\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <span>\n                        <FontAwesomeIcon\n                          icon={faCircle}\n                          style={{ color: \"#7B68EE\", marginRight: \"10px\" }}\n                        />\n                        {et.title}\n                      </span>\n                      <span>\n                        <Link\n                          to={{\n                            pathname: `${props.location.pathname}/panel`,\n                            user: loggedUser,\n                            event: et,\n                          }}\n                        >\n                          <FontAwesomeIcon icon={faCaretRight} />\n                        </Link>\n                      </span>\n                    </p>\n                  </li>\n                </div>\n              ))}\n          </ul>\n        </Card>\n      </Container>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, null)(Scheduler);\n//export default Scheduler;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Col,\n  Card,\n  CardFooter,\n} from \"reactstrap\";\n\nclass CreateEventType extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.location);\n    //   this.props = { event: { title: \"Phone Call\", duration: 45 } };\n    this.state = {\n      title: \"\",\n      duration: 0,\n      user: this.props.location.user,\n    };\n  }\n  changeHandle = (e) => {\n    let { value, name } = e.target;\n\n    this.setState({ [name]: value });\n\n    console.log();\n  };\n\n  setDuration = (e, value) => {\n    e.preventDefault();\n    this.setState({ duration: value });\n  };\n\n  save = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n\n    axios\n      .post(\"api/event_type/create/\", {\n        title: this.state.title,\n        duration: this.state.duration,\n        user: this.state.user,\n      })\n      .then((res) => {\n        //      console.log(res);\n        if (res.status === 200) {\n          console.log(res);\n        }\n      })\n      .catch((err) => console.log);\n  };\n\n  render() {\n    // let event = this.props.location.event;\n    // console.log(props.history);\n\n    let duration_range = [15, 30, 45, 60];\n\n    return (\n      <div style={{ margin: \"50px 50px 50px 150px\" }}>\n        <Button\n          outline\n          color=\"primary\"\n          onClick={() => this.props.history.goBack()}\n        >\n          {\"< Back\"}\n        </Button>\n        <h4 style={{ paddingLeft: \"20rem\", display: \"inline-block\" }}>\n          Add Event Type\n        </h4>\n        <br />\n        <br />\n\n        <hr />\n        <Card\n          body\n          style={{ marginTop: \"3rem\", border: \"0.1rem #483D8B solid\" }}\n        >\n          <Form>\n            <FormGroup style={{ marginBottom: \"2rem\" }}>\n              <Label for=\"Title\" style={{ marginBottom: \"1rem\" }}>\n                Event Name*\n              </Label>\n              <Col sm={6} style={{ paddingLeft: 0 }}>\n                <Input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  onChange={this.changeHandle}\n                  required\n                  style={{\n                    color: \"#8a2be2\",\n                    borderColor: \"#8a2be2\",\n                    borderWidth: \"2px\",\n                  }}\n                />\n              </Col>\n            </FormGroup>\n\n            <Label style={{ marginBottom: \"2rem\" }}>Event Duration*</Label>\n\n            <div style={{ display: \"flex\" }} className=\"duration-list\">\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 15 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 15)}\n              >\n                15\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 30 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 30)}\n              >\n                30\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 45 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 45)}\n              >\n                45\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 60 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 60)}\n              >\n                60\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Card\n                style={{\n                  display: \"inline-block\",\n                  color: \"black\",\n                  width: \"6rem\",\n                  height: \"3.5rem\",\n                  alignSelf: \"baseline\",\n                  marginLeft: \"1rem\",\n                  textAlign: \"center\",\n                  borderColor: \"black\",\n                }}\n                className={\n                  !duration_range.includes(this.state.duration)\n                    ? \"selected-duration\"\n                    : \"\"\n                }\n              >\n                <Input\n                  type=\"number\"\n                  id=\"duration\"\n                  name=\"duration\"\n                  onChange={this.changeHandle}\n                  style={{ height: \"2rem\" }}\n                />\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  custom min\n                </small>\n              </Card>\n            </div>\n            <br />\n\n            <hr />\n            <FormGroup\n              style={{\n                marginTop: \"2rem\",\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                outline\n                style={{ marginRight: \"20px\" }}\n                onClick={() => this.props.history.goBack()}\n              >\n                Cancel\n              </Button>\n\n              <Button color=\"primary\" onClick={this.save}>\n                Save\n              </Button>\n            </FormGroup>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default CreateEventType;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n//import { connect } from \"react-redux\";\n\nclass ShowEventTypes extends Component {\n  render() {\n    // console.log(Array.isArray(this.state.event_types));\n    let user = this.props.user;\n    return (\n      <>\n        <ul>\n          {this.props.event_types.map((et, id) => (\n            <li key={id}>\n              <div>\n                <p>\n                  {et.title} {et.duration}{\" \"}\n                </p>\n                <p>\n                  <Link\n                    to={{\n                      pathname: \"/event_type/edit\",\n                      eventType: et,\n                      user: user,\n                    }}\n                  >\n                    Edit\n                  </Link>\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\nexport default ShowEventTypes;\n","import React, { Component } from \"react\";\nimport { Card, CardTitle, Table, Button, ButtonGroup } from \"reactstrap\";\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      perPage: this.props.perPage,\n      data: this.props.data,\n      pageCount: Math.ceil(this.props.data.length / this.props.perPage),\n      offset: 0,\n      currPage: 1,\n      displayData: this.props.data.slice(0, this.props.perPage),\n    };\n\n    this.buttons = [];\n\n    for (let i = 1; i <= this.state.pageCount; i++) {\n      this.buttons.push(\n        <Button key={i} onClick={(e) => this.handleClick(e, i)}>\n          {i}\n        </Button>\n      );\n    }\n    console.log(this.buttons);\n  }\n\n  /*\n  componentDidMount() {\n    this.setState((state) => ({\n      ...state,\n      displayData: this.state.data.slice(\n        this.state.offset,\n        this.state.currPage * this.state.perPage\n      ),\n    }));\n  }\n*/\n\n  handleClick = (e, value) => {\n    e.preventDefault();\n\n    let offsetEnd = this.state.perPage * value;\n    let offsetStart = offsetEnd - this.state.perPage;\n    let data = this.state.data.slice(offsetStart, offsetEnd);\n    console.log(offsetStart);\n    this.setState({ displayData: data, currPage: value, offset: offsetStart });\n  };\n\n  next = (e) => {\n    e.preventDefault();\n    let {\n      currPage,\n      offset,\n      data,\n      displayData,\n      perPage,\n      pageCount,\n    } = this.state;\n    console.log(\"Page Count\", pageCount);\n\n    if (currPage === pageCount) {\n      console.log(\"You have reached at the end of the list\");\n      return;\n    }\n\n    offset = offset + 2;\n    currPage++;\n\n    displayData = data.slice(offset, currPage * perPage);\n    this.setState({ offset, currPage, displayData });\n  };\n\n  previous = (e) => {\n    e.preventDefault();\n    let {\n      currPage,\n      offset,\n      data,\n      displayData,\n      perPage,\n      pageCount,\n    } = this.state;\n\n    if (offset === 0) return;\n    offset = offset - 2;\n    currPage--;\n    displayData = data.slice(offset, currPage * perPage);\n    this.setState({ offset, currPage, displayData });\n  };\n\n  render() {\n    let { displayData } = this.state;\n\n    if (displayData.length > 0) {\n      console.log(\"Paginator:\", displayData);\n    }\n    return (\n      <>\n        <div>\n          {this.state.displayData.length > 0\n            ? this.state.displayData.map((evt, index) => (\n                <Card\n                  key={index}\n                  style={{\n                    padding: \"0.5rem\",\n                  }}\n                >\n                  <CardTitle>{evt.date}</CardTitle>\n                  <Table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          {evt.time_slot_start} -{evt.time_slot_end}\n                        </td>\n                        <td>\n                          {evt.first_name} {evt.last_name}\n                          <br />\n                          Event Type: {evt.title}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </Card>\n              ))\n            : \"\"}\n        </div>\n        <ButtonGroup>\n          <Button onClick={this.next}>Next</Button>\n          {this.buttons.length > 0 && this.buttons.map((a) => a)}\n          <Button onClick={this.previous}>Previous</Button>\n        </ButtonGroup>\n      </>\n    );\n  }\n}\n\nexport default Paginator;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link,\n  withRouter,\n} from \"react-router-dom\";\nimport { LOGOUT, LOAD_EVENT_TYPES } from \"./reducers\";\nimport Scheduler from \"./Scheduler\";\nimport ShowEventTypes from \"./EventType/ShowEventTypes\";\nimport CreateEventType from \"./CreateEventType\";\nimport Paginator from \"./Paginator\";\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n  Card,\n  CardText,\n  Button,\n  CardDeck,\n  CardFooter,\n  ButtonGroup,\n} from \"reactstrap\";\n\nconst mapStateToProps = (state) => {\n  let { loggedUser, eventTypes } = state;\n\n  return { loggedUser, eventTypes };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => {\n      console.log(\"trigger logout\");\n      // console.log(\"Set Login flag called\");\n      dispatch({ type: LOGOUT });\n    },\n    loadEventTypes: (events) => {\n      console.log(\"trigger load events\");\n\n      dispatch({ type: LOAD_EVENT_TYPES, payload: events });\n    },\n  };\n};\n\nclass Schedule extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      event_types: [],\n      activeTab: 1,\n      subActiveTab: 3,\n      upcoming_events: [],\n      past_events: [],\n      perPage: 2,\n    };\n  }\n\n  user = this.props.loggedUser.email;\n\n  name = this.props.loggedUser.name;\n\n  cust = this.props.customAppointmentLink;\n\n  /*\n  user = \"gawasshree@gmail.com\";\n\n  name = \"Shrikant Gawas\";\n\n  cust = \"/appointments/shrikant-gawas-bookings\";\n\n  */\n\n  setActiveTab = (value) => this.setState({ activeTab: value });\n\n  setSubActiveTab = (value) => this.setState({ subActiveTab: value });\n\n  getEventTypesFromAPI = () => {\n    console.log(\"Api called!!\");\n\n    axios\n      .get(`api/event_types/${this.user}`)\n      .then((res) => {\n        console.log(res.status);\n        if (res.status === 200 && res.data.length > 0) {\n          console.log(\"Yippie\");\n          this.setState({ event_types: res.data });\n          this.props.loadEventTypes(res.data);\n        }\n        console.log(\"Respone: \", res.data);\n      })\n      .catch((err) => console.log);\n  };\n\n  getUpcomingPastDataFromAPI = () => {\n    console.log(\"Api called!!\");\n\n    axios\n      .get(`api/schedule_events/${this.user}`)\n      .then((res) => {\n        console.log(res.status);\n        if (res.status === 200) {\n          this.setState({\n            upcoming_events: res.data.upcoming,\n            past_events: res.data.past,\n          });\n\n          console.log(\"upcomingData Events:\", this.state.upcoming_events);\n        }\n      })\n      .catch((err) => console.log);\n  };\n\n  updateEventTypes = () => {\n    this.getEventTypesFromAPI();\n  };\n\n  componentDidMount() {\n    this.getEventTypesFromAPI();\n    this.getUpcomingPastDataFromAPI();\n  }\n\n  render() {\n    //  console.log(this.state.event_types);\n\n    return (\n      <div>\n        <div style={{ margin: \"50px 50px 50px 150px\" }}>\n          <span style={{ fontFamily: \"Roboto Condensed\", fontSize: \"2rem\" }}>\n            My Schedule\n          </span>\n          <div style={{ marginTop: \"20px\", backgroundColor: \"#F5F5F5\" }}>\n            <Nav tabs>\n              <NavItem className={this.state.activeTab === 1 ? \"active\" : \"\"}>\n                <NavLink onClick={() => this.setActiveTab(1)}>\n                  Event Types\n                </NavLink>\n              </NavItem>\n              <NavItem className={this.state.activeTab === 2 ? \"active\" : \"\"}>\n                <NavLink onClick={() => this.setActiveTab(2)}>\n                  Scheduled Events\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId={1} className=\"pane\">\n                <Row style={{ marginTop: \"40px\" }}>\n                  <Col sm=\"12\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <p style={{ marginLeft: \"1rem\" }}>\n                        My Link <br />\n                        <Link to={this.cust}>{this.cust}</Link>\n                      </p>\n\n                      <Link\n                        to={{\n                          pathname: \"/app/event_type/create\",\n                          user: this.user,\n                        }}\n                        style={{ textDecoration: \"none\" }}\n                      >\n                        <Button\n                          outline\n                          color=\"primary\"\n                          style={{ marginRight: \"1rem\" }}\n                        >\n                          + New Event Type\n                        </Button>\n                      </Link>\n                    </div>\n                    <hr />\n                    <CardDeck style={{ marginTop: \"2rem\" }}>\n                      {this.state.event_types.length > 0\n                        ? this.state.event_types.map((event, index) => (\n                            <Card body className=\"event_cards\" key={index}>\n                              <CardText>{event.title}</CardText>\n                              <CardText>\n                                <small className=\"text-muted\">\n                                  {event.duration} mins\n                                </small>\n                              </CardText>\n                              <CardFooter style={{ backgroundColor: \"white\" }}>\n                                <Link\n                                  to={{\n                                    pathname: \"/app/event_type/edit\",\n                                    event: event,\n                                  }}\n                                >\n                                  Edit\n                                </Link>\n                              </CardFooter>\n                            </Card>\n                          ))\n                        : \"\"}\n                    </CardDeck>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane tabId={2} className=\"pane\">\n                <Row>\n                  <Col sm=\"12\">\n                    <Card\n                      body\n                      style={{\n                        width: \"80%\",\n                        margin: \"2rem 2rem 2rem 2rem\",\n                      }}\n                    >\n                      <Nav tabs>\n                        <NavItem\n                          className={\n                            this.state.subActiveTab === 3 ? \"active\" : \"\"\n                          }\n                        >\n                          <NavLink onClick={() => this.setSubActiveTab(3)}>\n                            Upcoming\n                          </NavLink>\n                        </NavItem>\n                        <NavItem\n                          className={\n                            this.state.subActiveTab === 4 ? \"active\" : \"\"\n                          }\n                        >\n                          <NavLink onClick={() => this.setSubActiveTab(4)}>\n                            Past\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                      <TabContent\n                        activeTab={this.state.subActiveTab}\n                        style={{\n                          overflow: \"auto\",\n                        }}\n                      >\n                        <TabPane tabId={3} className=\"pane\">\n                          <Row>\n                            <Col>\n                              {this.state.upcoming_events.length > 0 ? (\n                                <Paginator\n                                  data={this.state.upcoming_events}\n                                  perPage={2}\n                                />\n                              ) : (\n                                \"\"\n                              )}\n                            </Col>\n                          </Row>\n                        </TabPane>\n                        <TabPane tabId={4} className=\"pane\">\n                          <Row>\n                            <Col>\n                              {this.state.past_events.length > 0 ? (\n                                <Paginator\n                                  data={this.state.past_events}\n                                  perPage={2}\n                                />\n                              ) : (\n                                \"\"\n                              )}\n                            </Col>\n                          </Row>\n                        </TabPane>\n                      </TabContent>\n                    </Card>\n                  </Col>\n                </Row>\n              </TabPane>\n            </TabContent>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);\n//export default Schedule;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Col,\n  Card,\n  CardFooter,\n} from \"reactstrap\";\n\nclass EditEventType extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.location);\n    //   this.props = { event: { title: \"Phone Call\", duration: 45 } };\n    this.state = {\n      id: this.props.location.event.id,\n      title: this.props.location.event.title,\n      duration: this.props.location.event.duration,\n    };\n  }\n  changeHandle = (e) => {\n    let { value, name } = e.target;\n\n    this.setState({ [name]: value });\n\n    console.log();\n  };\n\n  setDuration = (e, value) => {\n    e.preventDefault();\n    this.setState({ duration: value });\n  };\n\n  save = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n\n    axios\n      .put(`api/event_type/edit/${this.state.id}`, {\n        title: this.state.title,\n        duration: this.state.duration,\n      })\n      .then((res) => {\n        //      console.log(res);\n        if (res.status === 200) {\n          console.log(res);\n        }\n      })\n      .catch((err) => console.log);\n  };\n\n  render() {\n    // let event = this.props.location.event;\n    // console.log(props.history);\n\n    let duration_range = [15, 30, 45, 60];\n\n    return (\n      <div style={{ margin: \"50px 50px 50px 150px\" }}>\n        <Button\n          outline\n          color=\"primary\"\n          onClick={() => this.props.history.goBack()}\n        >\n          {\"< Back\"}\n        </Button>\n        <h4 style={{ paddingLeft: \"20rem\", display: \"inline-block\" }}>\n          Edit Event Type\n        </h4>\n        <br />\n        <br />\n\n        <hr />\n        <Card\n          body\n          style={{ marginTop: \"3rem\", border: \"0.1rem #483D8B solid\" }}\n        >\n          <Form>\n            <FormGroup style={{ marginBottom: \"2rem\" }}>\n              <Label for=\"Title\" style={{ marginBottom: \"1rem\" }}>\n                Event Name*\n              </Label>\n              <Col sm={6} style={{ paddingLeft: 0 }}>\n                <Input\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  value={this.state.title}\n                  onChange={this.changeHandle}\n                  required\n                  style={{\n                    color: \"#8a2be2\",\n                    borderColor: \"#8a2be2\",\n                    borderWidth: \"2px\",\n                  }}\n                />\n              </Col>\n            </FormGroup>\n\n            <Label style={{ marginBottom: \"2rem\" }}>Event Duration*</Label>\n\n            <div style={{ display: \"flex\" }} className=\"duration-list\">\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 15 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 15)}\n              >\n                15\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 30 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 30)}\n              >\n                30\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 45 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 45)}\n              >\n                45\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Button\n                outline\n                style={{ color: \"black\", width: \"4rem\", height: \"3.5rem\" }}\n                className={\n                  this.state.duration === 60 ? \"selected-duration\" : \"\"\n                }\n                onClick={(event) => this.setDuration(event, 60)}\n              >\n                60\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  min\n                </small>\n              </Button>\n              <Card\n                style={{\n                  display: \"inline-block\",\n                  color: \"black\",\n                  width: \"6rem\",\n                  height: \"3.5rem\",\n                  alignSelf: \"baseline\",\n                  marginLeft: \"1rem\",\n                  textAlign: \"center\",\n                  borderColor: \"black\",\n                }}\n                className={\n                  !duration_range.includes(this.state.duration)\n                    ? \"selected-duration\"\n                    : \"\"\n                }\n              >\n                <Input\n                  type=\"number\"\n                  id=\"duration\"\n                  name=\"duration\"\n                  value={\n                    !duration_range.includes(this.state.duration)\n                      ? this.state.duration\n                      : \"-\"\n                  }\n                  onChange={this.changeHandle}\n                  style={{ height: \"2rem\" }}\n                />\n                <small className=\"text-muted\" style={{ display: \"block\" }}>\n                  custom min\n                </small>\n              </Card>\n            </div>\n            <br />\n\n            <hr />\n            <FormGroup\n              style={{\n                marginTop: \"2rem\",\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                outline\n                style={{ marginRight: \"20px\" }}\n                onClick={() => this.props.history.goBack()}\n              >\n                Cancel\n              </Button>\n\n              <Button color=\"primary\" onClick={this.save}>\n                Save\n              </Button>\n            </FormGroup>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default EditEventType;\n","import React from \"react\";\n\nconst Notfound = () => <h1>Not found</h1>;\n\nexport default Notfound;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from \"reactstrap\";\n\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport ResetPassword from \"./ResetPassword\";\nimport UpdatePassword from \"./UpdatePassword\";\nimport Schedule from \"./Schedule\";\nimport EditEventType from \"./EditEventType\";\nimport CreateEventType from \"./CreateEventType\";\n\nimport Notfound from \"./NotFound\";\n\nimport \"./App.css\";\nimport Scheduler from \"./Scheduler\";\nimport SchedulerPanel from \"./SchedulerPanel\";\n//import { SIGNUP } from \"./reducers\";\nconst CustomRoute = ({ isUserLogged, MyComponent, ...rest }) => {\n  if (isUserLogged) {\n    console.log(rest);\n    return <Route render={MyComponent} {...rest} />;\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  //let [loggedUser] = state.users.filter((x) => x.isLoggedIn === true);\n\n  console.log(state.isUserLogged);\n  return { isUserLogged: state.isUserLogged, loggedUser: state.loggedUser };\n};\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = () => this.setState({ isOpen: !this.state.isOpen });\n\n  render() {\n    let name = this.props.loggedUser.name;\n\n    let cust = name.replace(/\\s+/g, \"-\").toLowerCase();\n\n    let customAppointmentLink = `/app/appointments/${cust}-bookings`;\n\n    // mocked custome appointment link for testing Schedular\n    //   let customAppointmentLink = \"/appointments/shrikant-gawas-bookings\";\n\n    console.log(customAppointmentLink);\n    return (\n      <>\n        {this.props.isUserLogged ? (\n          <Navbar\n            color=\"dark\"\n            dark\n            expand=\"md\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-end\",\n            }}\n          >\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <NavbarText>\n                <UncontrolledDropdown>\n                  <DropdownToggle nav style={{ margin: 0, padding: 0 }}>\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        borderRadius: \"50%\",\n                        border: \"2px grey solid\",\n                        width: \"35px\",\n                        height: \"35px\",\n                        color: \"black\",\n                        lineHeight: \"35px\",\n                        textAlign: \"center\",\n                        backgroundColor: \"silver\",\n                        marginRight: \"0.5rem\",\n                      }}\n                    >\n                      {this.props.loggedUser.name.charAt(0)}\n                    </span>\n                    <span\n                      style={{\n                        color: \"silver\",\n                        fontSize: \"0.8rem\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {this.name}\n                    </span>\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem onClick={this.props.logout}>\n                      Logout\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </NavbarText>\n            </Collapse>\n          </Navbar>\n        ) : (\n          \"\"\n        )}\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/app/signup\" component={Signup} />\n            <CustomRoute\n              exact\n              path=\"/app/schedule\"\n              isUserLogged={this.props.isUserLogged}\n              MyComponent={(props) => (\n                <Schedule\n                  customAppointmentLink={customAppointmentLink}\n                  {...props}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              //     isUserLogged={this.props.isUserLogged}\n              path={customAppointmentLink}\n              // MyComponent={(props) => <Scheduler {...props} />}\n              component={Scheduler}\n            />\n\n            <Route\n              exact\n              path={`${customAppointmentLink}/panel`}\n              component={SchedulerPanel}\n            />\n\n            <Route\n              exact\n              path=\"/app/event_type/edit/\"\n              component={EditEventType}\n              //render={(props) => <EditEventType {...props} />}\n            />\n\n            <Route\n              exact\n              path=\"/app/event_type/create/\"\n              component={CreateEventType}\n            />\n\n            <Route exact path=\"/app/resetpassword\" component={ResetPassword} />\n            <Route\n              exact\n              path=\"/app/password/reset/:email/:token\"\n              render={({ match }) => (\n                <UpdatePassword\n                  email={match.params.email}\n                  token={match.params.token}\n                />\n              )}\n            />\n            <Route component={Notfound} />\n          </Switch>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n//import { BrowserRouter as Router, Switch } from \"react-router-dom\";\n//import { createBrowserHistory } from \"history\";\nimport rootReducer, { initialState } from \"./reducers\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./index.scss\";\n\n//import \"./fontawesome\";\n\nconst store = createStore(rootReducer, initialState);\n\n//const history = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}